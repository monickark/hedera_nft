{
  "contractName": "AuctionContract",
  "abi": [
    {
      "inputs": [],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "",
          "type": "int64"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapAuction",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenId",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "serialNumber",
          "type": "int64"
        },
        {
          "internalType": "uint256",
          "name": "basePrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "auctioner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "currentBidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "readyToClaim",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "claimed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "readyToClaim",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenId",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "serialNumber",
          "type": "int64"
        },
        {
          "internalType": "uint256",
          "name": "basePrice",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "_serialNumber",
          "type": "int64"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_auctioner",
          "type": "address"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "_serialNumber",
          "type": "int64"
        },
        {
          "internalType": "address",
          "name": "_auctioner",
          "type": "address"
        }
      ],
      "name": "settleAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "_serialNumber",
          "type": "int64"
        },
        {
          "internalType": "address",
          "name": "_auctioner",
          "type": "address"
        }
      ],
      "name": "claimAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "serialNumber",
          "type": "int64"
        }
      ],
      "name": "transferNonFungibleToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"_serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"_auctioner\",\"type\":\"address\"}],\"name\":\"claimAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapAuction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"auctioner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readyToClaim\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"_serialNumber\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_auctioner\",\"type\":\"address\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readyToClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"_serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"_auctioner\",\"type\":\"address\"}],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"transferNonFungibleToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"placeBid(address,int64,uint256,address)\":{\"params\":{\"_auctioner\":\"Seller address\",\"_price\":\"bid price   \",\"_tokenId\":\"NFT unique ID\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAuction(address,int64,uint256)\":{\"notice\":\"createAuction Function to start auction with first bid. Validate signatures, stores NFT data and add first bid as well\"},\"placeBid(address,int64,uint256,address)\":{\"notice\":\"placeBid Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AuctionContract.sol\":\"AuctionContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/AuctionContract.sol\":{\"keccak256\":\"0x1a203b670b516431dfad30d8f9259c976e3af47e405a2bfcc848f3b84d7bb047\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://bf84557132d4c29c529829fa1764cb864f155b2d632cfd60428f534568cd2d9f\",\"dweb:/ipfs/QmbGqA7nuQMj4JxFmTLmzcKeLaL547fYibh9wSnUHe8oEd\"]},\"project:/contracts/ExpiryHelper.sol\":{\"keccak256\":\"0x583f3daf18bc4bbab607613f1ba8f8da87b6516d8348f71926a940f3534cd16e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3fc080a4338185053610bcfcdeea96162a7165054bbae6a241af297157332c4e\",\"dweb:/ipfs/QmczTVXDDk6u5SvgCwzdizd23xWGU8FzNNAvxmWpDbZJL3\"]},\"project:/contracts/FeeHelper.sol\":{\"keccak256\":\"0xdb9aaac0edf1b7daa1f9a2c3000dbf6ad1f36c27f9c04c56eba3592957b6d7d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ca574428757cf75a43500c2f1198e1e957183a64b1f886651624fd81665f7ffa\",\"dweb:/ipfs/QmNnc41tm9LmC2TD4tLLESyFQTBemVVWZVkManrCD4YG4Q\"]},\"project:/contracts/HederaResponseCodes.sol\":{\"keccak256\":\"0x1b0a4e16c2cf238e15dc6c98789a32bb0186cbbed419efe593d74ff8051709de\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://24f4deaaa2acfc381fe91c989f8183429251f2d4bf5823c225fe95018b140ad0\",\"dweb:/ipfs/QmUBi59xPjxXJCZ3hpveN3cpBQupQXiqGy3TGvccoBVJDb\"]},\"project:/contracts/HederaTokenService.sol\":{\"keccak256\":\"0xc07d56e1b28a960af45e4c837e7896e44b5c66b706bbad1fb27dfb0e088b0df2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://93fd0bdeed12dd2db314c94dbc7385fe94c5c148cfc974d854707e7ddc4d678a\",\"dweb:/ipfs/QmfJn9z2hUif16hvVqrJhNXfzpDRtYm9dhDdrENgToCV2x\"]},\"project:/contracts/IHederaTokenService.sol\":{\"keccak256\":\"0xb95b948c23b3b0bbe9f7aa5aa6c2788c0f860f9569bb6441639baf96e0ee62a2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad6cfa6073043c4d0a8cb8a8250bc19040eb5a07c044cdaaded397db8d5fee1d\",\"dweb:/ipfs/QmfVeEL8dG8qCJEUpokRvzcLoT2ydJBUfHVn1WiUmqCAK8\"]},\"project:/contracts/KeyHelper.sol\":{\"keccak256\":\"0x0d2bf35d0c8d6fb026801c9df54872a00837fe5a510e4ae713bf9e23aa2ac83e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c60d4e2840a57669d57a42ca5682f3bfbd9abcc32b0e4e7fe89874b595d0be6b\",\"dweb:/ipfs/QmarV2kd7t7M1GC2hWkYbP8HsTjL1edyRYkfLoDhCJxcCT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610ba2806100206000396000f3fe608060405260043610610098576000357c010000000000000000000000000000000000000000000000000000000090048063b4d178501161006b578063b4d17850146100f8578063cd02929f146101e4578063d6048df514610204578063e834a8341461022e57600080fd5b80633ad8fe551461009d578063651480b9146100bf5780636f3f44cf146100d25780639a37e681146100e5575b600080fd5b3480156100a957600080fd5b506100bd6100b8366004610a46565b61024d565b005b6100bd6100cd3660046109f2565b610444565b6100bd6100e0366004610ac5565b6104d4565b6100bd6100f3366004610a89565b6106fb565b34801561010457600080fd5b5061018d610113366004610a46565b6001602081815260009485526040808620825293855283852090529083529120805491810154600282015460038301546004840154600590940154600160a060020a038087169674010000000000000000000000000000000000000000900460070b95938116939216919060ff8082169161010090041688565b60408051600160a060020a03998a16815260079890980b602089015287019590955292861660608601529416608084015260a083019390935291151560c082015290151560e0820152610100015b60405180910390f35b3480156101f057600080fd5b506100bd6101ff366004610a46565b6107d8565b34801561021057600080fd5b5060005461021e9060ff1681565b60405190151581526020016101db565b34801561023a57600080fd5b5060005461021e90610100900460ff1681565b600160a060020a038084166000908152600160208181526040808420600788810b900b8552825280842094861684529390529190206005810154909160ff90911615151461030b5760405160e560020a62461bcd02815260206004820152602860248201527f436c61696d2041756374696f6e203a2041756374696f6e206e6f74207365747460448201527f6c6564207965742100000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6005810154610100900460ff161561038e5760405160e560020a62461bcd02815260206004820152602660248201527f436c61696d2041756374696f6e203a20546f6b656e20616c726561647920636c60448201527f61696d65642100000000000000000000000000000000000000000000000000006064820152608401610302565b6003810154600160a060020a031633146104135760405160e560020a62461bcd02815260206004820152602e60248201527f436c61696d2041756374696f6e203a204f6e6c792061756374696f6e2077696d60448201527f6d65722063616e20636c61696d210000000000000000000000000000000000006064820152608401610302565b61041f84303386610444565b600501805461010061ff00199182168117909255600080549091169091179055505050565b6000610452858585856108ae565b9050601681146104cd5760405160e560020a62461bcd02815260206004820152602360248201527f4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f60448201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152608401610302565b5050505050565b600160a060020a038085166000908152600160208181526040808420600789810b900b855282528084209486168452939052919020908101548310156105855760405160e560020a62461bcd02815260206004820152602a60248201527f506c61636520426964203a205072696365204c657373205468616e207468652060448201527f62617365207072696365000000000000000000000000000000000000000000006064820152608401610302565b806004015483116106015760405160e560020a62461bcd02815260206004820152603a60248201527f506c61636520426964203a20546865207072696365206973206c65737320746860448201527f656e207468652070726576696f75732062696420616d6f756e740000000000006064820152608401610302565b8234146106795760405160e560020a62461bcd02815260206004820152603360248201527f506c616365204269643a20416d6f756e7420726563656976656420616e64207060448201527f726963652073686f756c642062652073616d65000000000000000000000000006064820152608401610302565b6003810154600160a060020a0316156106ce5760038101546004820154604051600160a060020a039092169181156108fc0291906000818181858888f193505050501580156106cc573d6000803e3d6000fd5b505b600481019290925550600301805473ffffffffffffffffffffffffffffffffffffffff1916331790555050565b600081116107745760405160e560020a62461bcd02815260206004820152602160248201527f4372656174652041756374696f6e203a205a65726f206261736520707269636560448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610302565b600160a060020a039092166000908152600160208181526040808420600795860b90950b84529381528383203380855291529290912060028101805473ffffffffffffffffffffffffffffffffffffffff1916909317909255600482018390550155565b600160a060020a038381166000908152600160209081526040808320600787810b900b84528252808320858516845290915290206002810154909116331461088b5760405160e560020a62461bcd02815260206004820152603260248201527f536574746c652041756374696f6e203a205265737472696374656420746f206160448201527f756374696f6e6572206f722061646d696e2100000000000000000000000000006064820152608401610302565b6005018054600160ff199182168117909255600080549091169091179055505050565b60408051600160a060020a038681166024830152858116604483015284166064820152600783900b6084808301919091528251808303909101815260a490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5cfc9011000000000000000000000000000000000000000000000000000000001790529051600091829182916101679161094f9190610b31565b6000604051808303816000865af19150503d806000811461098c576040519150601f19603f3d011682016040523d82523d6000602084013e610991565b606091505b5091509150816109a25760156109b6565b808060200190518101906109b69190610b07565b60030b979650505050505050565b8035600160a060020a03811681146109db57600080fd5b919050565b8035600781900b81146109db57600080fd5b60008060008060808587031215610a0857600080fd5b610a11856109c4565b9350610a1f602086016109c4565b9250610a2d604086016109c4565b9150610a3b606086016109e0565b905092959194509250565b600080600060608486031215610a5b57600080fd5b610a64846109c4565b9250610a72602085016109e0565b9150610a80604085016109c4565b90509250925092565b600080600060608486031215610a9e57600080fd5b610aa7846109c4565b9250610ab5602085016109e0565b9150604084013590509250925092565b60008060008060808587031215610adb57600080fd5b610ae4856109c4565b9350610af2602086016109e0565b925060408501359150610a3b606086016109c4565b600060208284031215610b1957600080fd5b81518060030b8114610b2a57600080fd5b9392505050565b6000825160005b81811015610b525760208186018101518583015201610b38565b81811115610b61576000828501525b50919091019291505056fea26469706673582212203c072ef1d2558d98e09e6fdf46588b53b3b4eed431e6fd3d32712b8e5f3b459864736f6c63430008060033",
  "deployedBytecode": "0x608060405260043610610098576000357c010000000000000000000000000000000000000000000000000000000090048063b4d178501161006b578063b4d17850146100f8578063cd02929f146101e4578063d6048df514610204578063e834a8341461022e57600080fd5b80633ad8fe551461009d578063651480b9146100bf5780636f3f44cf146100d25780639a37e681146100e5575b600080fd5b3480156100a957600080fd5b506100bd6100b8366004610a46565b61024d565b005b6100bd6100cd3660046109f2565b610444565b6100bd6100e0366004610ac5565b6104d4565b6100bd6100f3366004610a89565b6106fb565b34801561010457600080fd5b5061018d610113366004610a46565b6001602081815260009485526040808620825293855283852090529083529120805491810154600282015460038301546004840154600590940154600160a060020a038087169674010000000000000000000000000000000000000000900460070b95938116939216919060ff8082169161010090041688565b60408051600160a060020a03998a16815260079890980b602089015287019590955292861660608601529416608084015260a083019390935291151560c082015290151560e0820152610100015b60405180910390f35b3480156101f057600080fd5b506100bd6101ff366004610a46565b6107d8565b34801561021057600080fd5b5060005461021e9060ff1681565b60405190151581526020016101db565b34801561023a57600080fd5b5060005461021e90610100900460ff1681565b600160a060020a038084166000908152600160208181526040808420600788810b900b8552825280842094861684529390529190206005810154909160ff90911615151461030b5760405160e560020a62461bcd02815260206004820152602860248201527f436c61696d2041756374696f6e203a2041756374696f6e206e6f74207365747460448201527f6c6564207965742100000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6005810154610100900460ff161561038e5760405160e560020a62461bcd02815260206004820152602660248201527f436c61696d2041756374696f6e203a20546f6b656e20616c726561647920636c60448201527f61696d65642100000000000000000000000000000000000000000000000000006064820152608401610302565b6003810154600160a060020a031633146104135760405160e560020a62461bcd02815260206004820152602e60248201527f436c61696d2041756374696f6e203a204f6e6c792061756374696f6e2077696d60448201527f6d65722063616e20636c61696d210000000000000000000000000000000000006064820152608401610302565b61041f84303386610444565b600501805461010061ff00199182168117909255600080549091169091179055505050565b6000610452858585856108ae565b9050601681146104cd5760405160e560020a62461bcd02815260206004820152602360248201527f4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f60448201527f6b656e00000000000000000000000000000000000000000000000000000000006064820152608401610302565b5050505050565b600160a060020a038085166000908152600160208181526040808420600789810b900b855282528084209486168452939052919020908101548310156105855760405160e560020a62461bcd02815260206004820152602a60248201527f506c61636520426964203a205072696365204c657373205468616e207468652060448201527f62617365207072696365000000000000000000000000000000000000000000006064820152608401610302565b806004015483116106015760405160e560020a62461bcd02815260206004820152603a60248201527f506c61636520426964203a20546865207072696365206973206c65737320746860448201527f656e207468652070726576696f75732062696420616d6f756e740000000000006064820152608401610302565b8234146106795760405160e560020a62461bcd02815260206004820152603360248201527f506c616365204269643a20416d6f756e7420726563656976656420616e64207060448201527f726963652073686f756c642062652073616d65000000000000000000000000006064820152608401610302565b6003810154600160a060020a0316156106ce5760038101546004820154604051600160a060020a039092169181156108fc0291906000818181858888f193505050501580156106cc573d6000803e3d6000fd5b505b600481019290925550600301805473ffffffffffffffffffffffffffffffffffffffff1916331790555050565b600081116107745760405160e560020a62461bcd02815260206004820152602160248201527f4372656174652041756374696f6e203a205a65726f206261736520707269636560448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610302565b600160a060020a039092166000908152600160208181526040808420600795860b90950b84529381528383203380855291529290912060028101805473ffffffffffffffffffffffffffffffffffffffff1916909317909255600482018390550155565b600160a060020a038381166000908152600160209081526040808320600787810b900b84528252808320858516845290915290206002810154909116331461088b5760405160e560020a62461bcd02815260206004820152603260248201527f536574746c652041756374696f6e203a205265737472696374656420746f206160448201527f756374696f6e6572206f722061646d696e2100000000000000000000000000006064820152608401610302565b6005018054600160ff199182168117909255600080549091169091179055505050565b60408051600160a060020a038681166024830152858116604483015284166064820152600783900b6084808301919091528251808303909101815260a490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5cfc9011000000000000000000000000000000000000000000000000000000001790529051600091829182916101679161094f9190610b31565b6000604051808303816000865af19150503d806000811461098c576040519150601f19603f3d011682016040523d82523d6000602084013e610991565b606091505b5091509150816109a25760156109b6565b808060200190518101906109b69190610b07565b60030b979650505050505050565b8035600160a060020a03811681146109db57600080fd5b919050565b8035600781900b81146109db57600080fd5b60008060008060808587031215610a0857600080fd5b610a11856109c4565b9350610a1f602086016109c4565b9250610a2d604086016109c4565b9150610a3b606086016109e0565b905092959194509250565b600080600060608486031215610a5b57600080fd5b610a64846109c4565b9250610a72602085016109e0565b9150610a80604085016109c4565b90509250925092565b600080600060608486031215610a9e57600080fd5b610aa7846109c4565b9250610ab5602085016109e0565b9150604084013590509250925092565b60008060008060808587031215610adb57600080fd5b610ae4856109c4565b9350610af2602086016109e0565b925060408501359150610a3b606086016109c4565b600060208284031215610b1957600080fd5b81518060030b8114610b2a57600080fd5b9392505050565b6000825160005b81811015610b525760208186018101518583015201610b38565b81811115610b61576000828501525b50919091019291505056fea26469706673582212203c072ef1d2558d98e09e6fdf46588b53b3b4eed431e6fd3d32712b8e5f3b459864736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7772:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:10"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:10"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:10",
                "type": ""
              }
            ],
            "src": "14:196:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:113:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "272:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "294:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "281:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "272:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "353:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "362:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "365:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "355:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "355:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "355:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "323:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "341:1:10",
                                "type": "",
                                "value": "7"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "344:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "signextend",
                              "nodeType": "YulIdentifier",
                              "src": "330:10:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "330:20:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "320:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "320:31:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "313:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "313:39:10"
                  },
                  "nodeType": "YulIf",
                  "src": "310:2:10"
                }
              ]
            },
            "name": "abi_decode_int64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "241:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "252:5:10",
                "type": ""
              }
            ],
            "src": "215:160:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "499:286:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "546:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "555:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "558:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "548:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "548:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "548:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "520:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "529:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "516:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "516:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "541:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "512:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "509:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "571:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "600:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "581:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "581:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "571:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "619:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "652:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "663:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "648:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "629:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "629:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "619:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "676:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "709:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "720:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "705:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "705:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "686:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "686:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "676:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "733:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "764:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "775:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "760:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "760:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int64",
                      "nodeType": "YulIdentifier",
                      "src": "743:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "733:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_int64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "441:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "452:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "464:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "472:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "480:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "488:6:10",
                "type": ""
              }
            ],
            "src": "380:405:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "892:228:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "938:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "947:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "950:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "940:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "940:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "940:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "913:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "922:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "909:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "909:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "905:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "902:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "963:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "992:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "973:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "963:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1011:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1042:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1053:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1038:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1038:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int64",
                      "nodeType": "YulIdentifier",
                      "src": "1021:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1011:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1066:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1099:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1110:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1076:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1076:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1066:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_int64t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "842:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "853:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "865:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "873:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "881:6:10",
                "type": ""
              }
            ],
            "src": "790:330:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1227:222:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1273:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1282:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1285:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1275:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1275:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1275:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1248:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1257:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1244:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1244:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1269:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1240:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1237:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1327:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1308:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1308:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1298:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1346:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1377:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1388:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1373:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1373:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int64",
                      "nodeType": "YulIdentifier",
                      "src": "1356:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1356:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1346:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1401:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1428:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1439:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1424:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1424:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1411:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1411:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1401:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_int64t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1177:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1188:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1200:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1208:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1216:6:10",
                "type": ""
              }
            ],
            "src": "1125:324:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1573:280:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1620:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1629:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1632:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1622:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1622:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1622:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1594:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1603:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1590:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1590:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1615:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1586:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1586:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1583:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1645:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1674:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1655:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1645:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1693:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1724:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1735:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1720:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1720:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int64",
                      "nodeType": "YulIdentifier",
                      "src": "1703:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1693:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1748:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1775:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1786:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1771:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1771:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1758:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1758:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1748:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1799:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1832:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1843:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1828:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1828:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1809:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1809:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1799:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_int64t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1515:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1526:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1538:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1546:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1554:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1562:6:10",
                "type": ""
              }
            ],
            "src": "1454:399:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1937:198:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1983:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1992:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1995:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1985:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1985:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1985:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1958:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1967:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1954:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1954:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1979:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1950:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1950:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1947:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2008:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2027:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2021:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:16:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2012:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2089:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2098:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2101:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2091:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2091:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2091:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2059:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2077:1:10",
                                "type": "",
                                "value": "3"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2080:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "signextend",
                              "nodeType": "YulIdentifier",
                              "src": "2066:10:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2066:20:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2056:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2056:31:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2049:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:39:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2046:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2114:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2124:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2114:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1903:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1914:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1926:6:10",
                "type": ""
              }
            ],
            "src": "1858:277:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2277:289:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2287:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2307:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2301:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2301:13:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2291:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2323:10:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2332:1:10",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2327:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2394:77:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2419:3:10"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2424:1:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2415:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2415:11:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2442:6:10"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2450:1:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2438:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2438:14:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2454:4:10",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2434:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2434:25:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2428:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2428:32:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2408:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2408:53:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2408:53:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2353:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2356:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2350:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2350:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2364:21:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2366:17:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2375:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2378:4:10",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2371:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2371:12:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2366:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2346:3:10",
                    "statements": []
                  },
                  "src": "2342:129:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2497:31:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2510:3:10"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2515:6:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2506:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2506:16:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2524:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2499:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2499:27:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2499:27:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2486:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2489:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2483:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2483:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2480:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2537:23:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2548:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2553:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2544:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:16:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2537:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2253:3:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2258:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2269:3:10",
                "type": ""
              }
            ],
            "src": "2140:426:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2752:309:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2762:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2774:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2785:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2770:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2770:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2762:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2798:52:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2808:42:10",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2802:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2866:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2881:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2889:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2877:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2877:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2859:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2859:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2859:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2913:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2924:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2909:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2909:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2933:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2941:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2929:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2929:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2902:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2902:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2902:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2965:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2976:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2961:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2961:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "2985:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2993:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2981:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2981:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2954:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2954:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2954:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3017:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3028:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3013:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3013:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3044:1:10",
                            "type": "",
                            "value": "7"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3047:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "signextend",
                          "nodeType": "YulIdentifier",
                          "src": "3033:10:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3033:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3006:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3006:49:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3006:49:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2697:9:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2708:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2716:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2724:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2732:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2743:4:10",
                "type": ""
              }
            ],
            "src": "2571:490:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3347:517:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3357:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3369:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3380:3:10",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3365:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3365:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3357:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3393:52:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3403:42:10",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3397:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3461:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3476:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3484:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3472:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3472:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3454:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3454:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3454:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3508:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3519:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3504:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3535:1:10",
                            "type": "",
                            "value": "7"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3538:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "signextend",
                          "nodeType": "YulIdentifier",
                          "src": "3524:10:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3524:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3497:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3497:49:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3497:49:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3566:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3577:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3562:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3562:18:10"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3582:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3555:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3555:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3555:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3609:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3620:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3605:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3605:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3629:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3637:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3625:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3625:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3598:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3598:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3598:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3661:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3672:3:10",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3657:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3657:19:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "3682:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3690:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3678:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3678:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3650:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:44:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3650:44:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3714:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3725:3:10",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3710:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3710:19:10"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "3731:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3703:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3703:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3703:35:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3758:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3769:3:10",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3754:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3754:19:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value6",
                                "nodeType": "YulIdentifier",
                                "src": "3789:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3782:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3782:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3775:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3775:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3747:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3747:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3747:51:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3818:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3829:3:10",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3814:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3814:19:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value7",
                                "nodeType": "YulIdentifier",
                                "src": "3849:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3842:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3842:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3835:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3835:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3807:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3807:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3807:51:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_int64_t_uint256_t_address_t_address_t_uint256_t_bool_t_bool__to_t_address_t_int64_t_uint256_t_address_t_address_t_uint256_t_bool_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3260:9:10",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "3271:6:10",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "3279:6:10",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3287:6:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3295:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3303:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3311:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3319:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3327:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3338:4:10",
                "type": ""
              }
            ],
            "src": "3066:798:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3964:92:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3974:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3986:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3997:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3982:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3982:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3974:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4016:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4041:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4034:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4034:14:10"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4027:6:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4027:22:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4009:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4009:41:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4009:41:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3933:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3944:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3955:4:10",
                "type": ""
              }
            ],
            "src": "3869:187:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4235:236:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4252:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4263:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4245:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4245:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4245:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4286:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4297:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4282:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4282:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4302:2:10",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4275:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4275:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4275:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4325:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4336:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4321:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4321:18:10"
                      },
                      {
                        "hexValue": "436c61696d2041756374696f6e203a204f6e6c792061756374696f6e2077696d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4341:34:10",
                        "type": "",
                        "value": "Claim Auction : Only auction wim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4314:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4314:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4314:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4396:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4407:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4392:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4392:18:10"
                      },
                      {
                        "hexValue": "6d65722063616e20636c61696d21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4412:16:10",
                        "type": "",
                        "value": "mer can claim!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4385:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4385:44:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4385:44:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4438:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4450:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4461:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4446:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4446:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4438:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1d12950b4bdaaad1c60e5d10f5f7628f7dd8658fb046e60480229ff9187be035__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4212:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4226:4:10",
                "type": ""
              }
            ],
            "src": "4061:410:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4650:232:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4667:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4678:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4660:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4660:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4660:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4701:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4712:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4697:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4697:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4717:2:10",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4690:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4690:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4690:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4740:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4751:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4736:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:18:10"
                      },
                      {
                        "hexValue": "506c61636520426964203a205072696365204c657373205468616e2074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4756:34:10",
                        "type": "",
                        "value": "Place Bid : Price Less Than the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4729:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4729:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4729:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4811:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4822:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4807:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4807:18:10"
                      },
                      {
                        "hexValue": "62617365207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4827:12:10",
                        "type": "",
                        "value": "base price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4800:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4800:40:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4800:40:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4849:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4861:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4872:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4857:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4857:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4849:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4627:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4641:4:10",
                "type": ""
              }
            ],
            "src": "4476:406:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5061:248:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5078:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5089:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5071:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5071:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5071:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5112:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5123:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5108:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5108:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5128:2:10",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5101:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5101:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5101:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5151:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5162:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5147:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5147:18:10"
                      },
                      {
                        "hexValue": "506c61636520426964203a20546865207072696365206973206c657373207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5167:34:10",
                        "type": "",
                        "value": "Place Bid : The price is less th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5140:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5140:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5140:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5222:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5233:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5218:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5218:18:10"
                      },
                      {
                        "hexValue": "656e207468652070726576696f75732062696420616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5238:28:10",
                        "type": "",
                        "value": "en the previous bid amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5211:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5211:56:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5211:56:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5276:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5288:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5299:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5284:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5284:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5276:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5038:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5052:4:10",
                "type": ""
              }
            ],
            "src": "4887:422:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5488:230:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5505:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5516:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5498:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5498:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5498:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5539:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5550:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5535:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5535:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5555:2:10",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5528:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5528:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5528:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5578:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5589:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5574:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5574:18:10"
                      },
                      {
                        "hexValue": "436c61696d2041756374696f6e203a2041756374696f6e206e6f742073657474",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5594:34:10",
                        "type": "",
                        "value": "Claim Auction : Auction not sett"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5567:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5567:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5567:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5649:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5660:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5645:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5645:18:10"
                      },
                      {
                        "hexValue": "6c65642079657421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5665:10:10",
                        "type": "",
                        "value": "led yet!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5638:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5638:38:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5638:38:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5685:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5697:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5708:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5693:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5693:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5685:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_49a0e13044355ab9ab2b6298c3237d200c6ea10f8bbdcc8dfab1c2e78c3a6246__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5465:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5479:4:10",
                "type": ""
              }
            ],
            "src": "5314:404:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5897:223:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5914:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5925:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5907:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5907:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5907:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5948:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5959:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5944:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5944:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5964:2:10",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5937:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5937:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5937:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5987:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5998:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5983:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5983:18:10"
                      },
                      {
                        "hexValue": "4372656174652041756374696f6e203a205a65726f2062617365207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6003:34:10",
                        "type": "",
                        "value": "Create Auction : Zero base price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5976:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5976:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5976:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6058:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6069:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6054:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6054:18:10"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6074:3:10",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6047:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6047:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6047:31:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6087:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6099:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6110:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6095:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6095:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6087:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5874:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5888:4:10",
                "type": ""
              }
            ],
            "src": "5723:397:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6299:228:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6316:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6327:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6309:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6309:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6309:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6350:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6361:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6346:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6346:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6366:2:10",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6339:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6339:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6339:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6389:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6400:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6385:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6385:18:10"
                      },
                      {
                        "hexValue": "436c61696d2041756374696f6e203a20546f6b656e20616c726561647920636c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6405:34:10",
                        "type": "",
                        "value": "Claim Auction : Token already cl"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6378:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6378:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6460:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6471:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6456:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6456:18:10"
                      },
                      {
                        "hexValue": "61696d656421",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6476:8:10",
                        "type": "",
                        "value": "aimed!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6449:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6449:36:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6449:36:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6494:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6506:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6517:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6502:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6502:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6494:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7df8b251cdd5a3411b0b6cc64b24010ccf042c0f54ae17985efbf3f38d17dadb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6276:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6290:4:10",
                "type": ""
              }
            ],
            "src": "6125:402:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6706:225:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6723:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6734:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6716:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6716:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6716:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6757:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6768:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6753:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6753:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6773:2:10",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6746:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6746:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6746:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6796:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6807:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6792:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6792:18:10"
                      },
                      {
                        "hexValue": "4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6812:34:10",
                        "type": "",
                        "value": "Failed to create non-fungible to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6785:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6785:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6785:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6867:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6878:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6863:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6863:18:10"
                      },
                      {
                        "hexValue": "6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6883:5:10",
                        "type": "",
                        "value": "ken"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6856:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6856:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6856:33:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6898:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6910:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6921:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6906:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6906:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6898:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6683:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6697:4:10",
                "type": ""
              }
            ],
            "src": "6532:399:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7110:241:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7127:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7138:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7120:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7120:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7120:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7161:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7172:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7157:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7157:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7177:2:10",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7150:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7150:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7150:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7200:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7211:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7196:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7196:18:10"
                      },
                      {
                        "hexValue": "506c616365204269643a20416d6f756e7420726563656976656420616e642070",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7216:34:10",
                        "type": "",
                        "value": "Place Bid: Amount received and p"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7189:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7189:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7189:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7271:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7282:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7267:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7267:18:10"
                      },
                      {
                        "hexValue": "726963652073686f756c642062652073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7287:21:10",
                        "type": "",
                        "value": "rice should be same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7260:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7260:49:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7260:49:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7318:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7330:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7341:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7326:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7326:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7318:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7087:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7101:4:10",
                "type": ""
              }
            ],
            "src": "6936:415:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7530:240:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7547:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7558:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7540:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7540:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7540:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7581:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7592:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7577:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7577:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7597:2:10",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7570:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7570:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7570:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7620:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7631:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7616:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7616:18:10"
                      },
                      {
                        "hexValue": "536574746c652041756374696f6e203a205265737472696374656420746f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7636:34:10",
                        "type": "",
                        "value": "Settle Auction : Restricted to a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7609:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7609:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7609:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7691:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7702:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7687:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7687:18:10"
                      },
                      {
                        "hexValue": "756374696f6e6572206f722061646d696e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7707:20:10",
                        "type": "",
                        "value": "uctioner or admin!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7680:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7680:48:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7680:48:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7737:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7749:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7760:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7745:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7745:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7737:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7507:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7521:4:10",
                "type": ""
              }
            ],
            "src": "7356:414:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_int64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, signextend(7, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_int64(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_int64(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_int64t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_int64(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_int64t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_int64(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_int64t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_int64(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_int32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, signextend(3, value))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), signextend(7, value3))\n    }\n    function abi_encode_tuple_t_address_t_int64_t_uint256_t_address_t_address_t_uint256_t_bool_t_bool__to_t_address_t_int64_t_uint256_t_address_t_address_t_uint256_t_bool_t_bool__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), signextend(7, value1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), iszero(iszero(value6)))\n        mstore(add(headStart, 224), iszero(iszero(value7)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_1d12950b4bdaaad1c60e5d10f5f7628f7dd8658fb046e60480229ff9187be035__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Claim Auction : Only auction wim\")\n        mstore(add(headStart, 96), \"mer can claim!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Place Bid : Price Less Than the \")\n        mstore(add(headStart, 96), \"base price\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Place Bid : The price is less th\")\n        mstore(add(headStart, 96), \"en the previous bid amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_49a0e13044355ab9ab2b6298c3237d200c6ea10f8bbdcc8dfab1c2e78c3a6246__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Claim Auction : Auction not sett\")\n        mstore(add(headStart, 96), \"led yet!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Create Auction : Zero base price\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7df8b251cdd5a3411b0b6cc64b24010ccf042c0f54ae17985efbf3f38d17dadb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Claim Auction : Token already cl\")\n        mstore(add(headStart, 96), \"aimed!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Failed to create non-fungible to\")\n        mstore(add(headStart, 96), \"ken\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"Place Bid: Amount received and p\")\n        mstore(add(headStart, 96), \"rice should be same\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Settle Auction : Restricted to a\")\n        mstore(add(headStart, 96), \"uctioner or admin!\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "208:3423:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "208:3423:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2651:612;;;;;;;;;;-1:-1:-1;2651:612:0;;;;;:::i;:::-;;:::i;:::-;;3267:361;;;;;;:::i;:::-;;:::i;1433:848::-;;;;;;:::i;:::-;;:::i;821:373::-;;;;;;:::i;:::-;;:::i;575:83::-;;;;;;;;;;-1:-1:-1;575:83:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;575:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3472:15:10;;;3454:34;;3535:1;3524:21;;;;3519:2;3504:18;;3497:49;3562:18;;3555:34;;;;3625:15;;;3620:2;3605:18;;3598:43;3678:15;;3672:3;3657:19;;3650:44;3725:3;3710:19;;3703:35;;;;3782:14;;3775:22;3769:3;3754:19;;3747:51;3842:14;;3835:22;3829:3;3814:19;;3807:51;3380:3;3365:19;575:83:0;;;;;;;;2285:362;;;;;;;;;;-1:-1:-1;2285:362:0;;;;;:::i;:::-;;:::i;522:24::-;;;;;;;;;;-1:-1:-1;522:24:0;;;;;;;;;;;4034:14:10;;4027:22;4009:41;;3997:2;3982:18;522:24:0;3964:92:10;551:19:0;;;;;;;;;;-1:-1:-1;551:19:0;;;;;;;;;;;2651:612;-1:-1:-1;;;;;2792:20:0;;;2761:28;2792:20;;;:10;:20;;;;;;;;:35;;;;;;;;;;;;;:47;;;;;;;;;;;2853:25;;;;2792:47;;2853:25;;;;:33;;;2845:86;;;;-1:-1:-1;;;;;2845:86:0;;5516:2:10;2845:86:0;;;5498:21:10;5555:2;5535:18;;;5528:30;5594:34;5574:18;;;5567:62;5665:10;5645:18;;;5638:38;5693:19;;2845:86:0;;;;;;;;;2945:20;;;;;;;;;:29;2937:80;;;;-1:-1:-1;;;;;2937:80:0;;6327:2:10;2937:80:0;;;6309:21:10;6366:2;6346:18;;;6339:30;6405:34;6385:18;;;6378:62;6476:8;6456:18;;;6449:36;6502:19;;2937:80:0;6299:228:10;2937:80:0;3045:26;;;;-1:-1:-1;;;;;3045:26:0;3031:10;:40;3023:99;;;;-1:-1:-1;;;;;3023:99:0;;4263:2:10;3023:99:0;;;4245:21:10;4302:2;4282:18;;;4275:30;4341:34;4321:18;;;4314:62;4412:16;4392:18;;;4385:44;4446:19;;3023:99:0;4235:236:10;3023:99:0;3128:77;3153:8;3171:4;3178:10;3191:13;3128:24;:77::i;:::-;3211:20;;:27;;;-1:-1:-1;;3211:27:0;;;;;;;;-1:-1:-1;3244:14:0;;;;;;;;;;-1:-1:-1;;;2651:612:0:o;3267:361::-;3414:16;3439:69;3470:5;3477:6;3485:8;3495:12;3439:30;:69::i;:::-;3413:95;-1:-1:-1;2763:2:3;3518:43:0;;3515:109;;3572:45;;-1:-1:-1;;;;;3572:45:0;;6734:2:10;3572:45:0;;;6716:21:10;6773:2;6753:18;;;6746:30;6812:34;6792:18;;;6785:62;6883:5;6863:18;;;6856:33;6906:19;;3572:45:0;6706:225:10;3515:109:0;3405:223;3267:361;;;;:::o;1433:848::-;-1:-1:-1;;;;;1599:21:0;;;1568:28;1599:21;;;:10;:21;;;;;;;;:36;;;;;;;;;;;;;:48;;;;;;;;;;;1673:22;;;;1663:32;;;1655:87;;;;-1:-1:-1;;;;;1655:87:0;;4678:2:10;1655:87:0;;;4660:21:10;4717:2;4697:18;;;4690:30;4756:34;4736:18;;;4729:62;4827:12;4807:18;;;4800:40;4857:19;;1655:87:0;4650:232:10;1655:87:0;1765:12;:22;;;1756:6;:31;1748:102;;;;-1:-1:-1;;;;;1748:102:0;;5089:2:10;1748:102:0;;;5071:21:10;5128:2;5108:18;;;5101:30;5167:34;5147:18;;;5140:62;5238:28;5218:18;;;5211:56;5284:19;;1748:102:0;5061:248:10;1748:102:0;1877:6;1864:9;:19;1856:83;;;;-1:-1:-1;;;;;1856:83:0;;7138:2:10;1856:83:0;;;7120:21:10;7177:2;7157:18;;;7150:30;7216:34;7196:18;;;7189:62;7287:21;7267:18;;;7260:49;7326:19;;1856:83:0;7110:241:10;1856:83:0;2070:26;;;;-1:-1:-1;;;;;2070:26:0;:40;2066:129;;2128:26;;;;2165:22;;;;2120:68;;-1:-1:-1;;;;;2128:26:0;;;;2120:68;;;;;2165:22;2128:26;2120:68;2128:26;2120:68;2165:22;2128:26;2120:68;;;;;;;;;;;;;;;;;;;;;2066:129;2200:22;;;:31;;;;-1:-1:-1;2237:26:0;;:39;;-1:-1:-1;;2237:39:0;2266:10;2237:39;;;-1:-1:-1;;1433:848:0:o;821:373::-;947:1;935:9;:13;927:59;;;;-1:-1:-1;;;;;927:59:0;;5925:2:10;927:59:0;;;5907:21:10;5964:2;5944:18;;;5937:30;6003:34;5983:18;;;5976:62;6074:3;6054:18;;;6047:31;6095:19;;927:59:0;5897:223:10;927:59:0;-1:-1:-1;;;;;1023:19:0;;;992:28;1023:19;;;:10;:19;;;;;;;;:33;;;;;;;;;;;;;;;1057:10;1023:45;;;;;;;;;1074:22;;;:35;;-1:-1:-1;;1074:35:0;;;;;;;1115:22;;;:34;;;1155:22;:34;821:373::o;2285:362::-;-1:-1:-1;;;;;2427:20:0;;;2396:28;2427:20;;;:10;:20;;;;;;;;:35;;;;;;;;;;;;;:47;;;;;;;;;;2502:22;;;;2427:47;;2502:22;2488:10;:36;2480:99;;;;-1:-1:-1;;;;;2480:99:0;;7558:2:10;2480:99:0;;;7540:21:10;7597:2;7577:18;;;7570:30;7636:34;7616:18;;;7609:62;7707:20;7687:18;;;7680:48;7745:19;;2480:99:0;7530:240:10;2480:99:0;2585:25;;:32;;2613:4;-1:-1:-1;;2585:32:0;;;;;;;;-1:-1:-1;2623:19:0;;;;;;;;;;-1:-1:-1;;;2285:362:0:o;22347:444:4:-;22573:116;;;-1:-1:-1;;;;;2877:15:10;;;22573:116:4;;;2859:34:10;2929:15;;;2909:18;;;2902:43;2981:15;;2961:18;;;2954:43;3044:1;3033:21;;;3013:18;;;;3006:49;;;;22573:116:4;;;;;;;;;;2770:19:10;;;;22573:116:4;;;;;;;;;22596:40;22573:116;;;22536:154;;-1:-1:-1;;;;;;300:5:4;;22536:154;;22573:116;22536:154;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22498:192;;;;22716:7;:67;;2616:2:3;22716:67:4;;;22737:6;22726:27;;;;;;;;;;;;:::i;:::-;22701:82;;;22347:444;-1:-1:-1;;;;;;;22347:444:4:o;14:196:10:-;82:20;;-1:-1:-1;;;;;131:54:10;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:160::-;281:20;;341:1;330:20;;;320:31;;310:2;;365:1;362;355:12;380:405;464:6;472;480;488;541:3;529:9;520:7;516:23;512:33;509:2;;;558:1;555;548:12;509:2;581:29;600:9;581:29;:::i;:::-;571:39;;629:38;663:2;652:9;648:18;629:38;:::i;:::-;619:48;;686:38;720:2;709:9;705:18;686:38;:::i;:::-;676:48;;743:36;775:2;764:9;760:18;743:36;:::i;:::-;733:46;;499:286;;;;;;;:::o;790:330::-;865:6;873;881;934:2;922:9;913:7;909:23;905:32;902:2;;;950:1;947;940:12;902:2;973:29;992:9;973:29;:::i;:::-;963:39;;1021:36;1053:2;1042:9;1038:18;1021:36;:::i;:::-;1011:46;;1076:38;1110:2;1099:9;1095:18;1076:38;:::i;:::-;1066:48;;892:228;;;;;:::o;1125:324::-;1200:6;1208;1216;1269:2;1257:9;1248:7;1244:23;1240:32;1237:2;;;1285:1;1282;1275:12;1237:2;1308:29;1327:9;1308:29;:::i;:::-;1298:39;;1356:36;1388:2;1377:9;1373:18;1356:36;:::i;:::-;1346:46;;1439:2;1428:9;1424:18;1411:32;1401:42;;1227:222;;;;;:::o;1454:399::-;1538:6;1546;1554;1562;1615:3;1603:9;1594:7;1590:23;1586:33;1583:2;;;1632:1;1629;1622:12;1583:2;1655:29;1674:9;1655:29;:::i;:::-;1645:39;;1703:36;1735:2;1724:9;1720:18;1703:36;:::i;:::-;1693:46;;1786:2;1775:9;1771:18;1758:32;1748:42;;1809:38;1843:2;1832:9;1828:18;1809:38;:::i;1858:277::-;1926:6;1979:2;1967:9;1958:7;1954:23;1950:32;1947:2;;;1995:1;1992;1985:12;1947:2;2027:9;2021:16;2080:5;2077:1;2066:20;2059:5;2056:31;2046:2;;2101:1;2098;2091:12;2046:2;2124:5;1937:198;-1:-1:-1;;;1937:198:10:o;2140:426::-;2269:3;2307:6;2301:13;2332:1;2342:129;2356:6;2353:1;2350:13;2342:129;;;2454:4;2438:14;;;2434:25;;2428:32;2415:11;;;2408:53;2371:12;2342:129;;;2489:6;2486:1;2483:13;2480:2;;;2524:1;2515:6;2510:3;2506:16;2499:27;2480:2;-1:-1:-1;2544:16:10;;;;;2277:289;-1:-1:-1;;2277:289:10:o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.6.0 <0.9.0;\n \nimport './HederaResponseCodes.sol';\nimport './IHederaTokenService.sol';\nimport './HederaTokenService.sol';\nimport './ExpiryHelper.sol';\n \ncontract AuctionContract is ExpiryHelper{\n\n  /**\n   * @notice NFT metadata along with bid details\n  */\n  struct Auction {\n    address tokenId;\n    int64 serialNumber;\n    uint256 basePrice;\n    address auctioner;\n    address currentBidder;\n    uint256 bidAmount;\n    bool readyToClaim;\n    bool claimed;\n  }  \n\n   bool public readyToClaim;\n   bool public claimed;\n   mapping(address => mapping(int64 => mapping(address => Auction))) public mapAuction;\n    /**\n   * @notice createAuction\n   * Function to start auction with first bid.\n   * Validate signatures, stores NFT data and add first bid as well\n   */\n \n   function createAuction(address tokenId, int64 serialNumber, uint256 basePrice) external payable {    \n    require(basePrice > 0, 'Create Auction : Zero base price.');\n    Auction storage NftOnAuction = mapAuction[tokenId][serialNumber][msg.sender];\n    NftOnAuction.auctioner = msg.sender;\n    NftOnAuction.bidAmount = basePrice;\n    NftOnAuction.basePrice = basePrice;\n  }\n\n  /**\n   * @notice placeBid\n   * Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token\n   * @param _tokenId NFT unique ID\n   * @param _price bid price   \n   * @param _auctioner Seller address\n   */\n  function placeBid(\n    address _tokenId,\n    int64 _serialNumber,\n    uint256 _price,\n    address _auctioner\n  ) public payable {\n\n    Auction storage NftOnAuction = mapAuction [_tokenId][_serialNumber][_auctioner];  \n    require(_price >= NftOnAuction.basePrice, 'Place Bid : Price Less Than the base price');\n    require(_price > NftOnAuction.bidAmount, 'Place Bid : The price is less then the previous bid amount');\n    require(msg.value == _price, 'Place Bid: Amount received and price should be same');\n    // require(msg.value > NftOnAuction.bidAmount, 'Place Bid: Amount received should be grather than the current bid');\n    if (NftOnAuction.currentBidder != address(0)) {\n      payable(NftOnAuction.currentBidder).transfer(NftOnAuction.bidAmount);\n    }\n    NftOnAuction.bidAmount = _price;\n    NftOnAuction.currentBidder = msg.sender;\n  }\n\n  function settleAuction(\n    address _tokenId,\n    int64 _serialNumber,\n    address _auctioner\n  ) public {\n    Auction storage NftOnAuction = mapAuction[_tokenId][_serialNumber][_auctioner];\n    require(msg.sender == NftOnAuction.auctioner, 'Settle Auction : Restricted to auctioner or admin!');\n    NftOnAuction.readyToClaim = true;\n    readyToClaim = true;\n  }\n\n  function claimAuction(\n    address _tokenId,\n    int64 _serialNumber,\n    address _auctioner\n  ) public {\n    Auction storage NftOnAuction = mapAuction[_tokenId][_serialNumber][_auctioner];\n    require(NftOnAuction.readyToClaim == true, 'Claim Auction : Auction not settled yet!');\n    require(NftOnAuction.claimed == false, 'Claim Auction : Token already claimed!');\n    require(msg.sender == NftOnAuction.currentBidder, 'Claim Auction : Only auction wimmer can claim!');\n    transferNonFungibleToken(_tokenId, address(this), msg.sender,  _serialNumber);\n    NftOnAuction.claimed = true;\n    claimed = true;\n  }\n\n  function transferNonFungibleToken(\n    address token,\n    address sender,\n    address receiver,\n    int64 serialNumber\n  ) public payable {\n \n    (int responseCode) = \n    HederaTokenService.transferNFT(token, sender, receiver, serialNumber);\n\n    if(responseCode != HederaResponseCodes.SUCCESS){\n        revert(\"Failed to create non-fungible token\");\n    }\n  }\n\n}",
  "sourcePath": "C:\\ACCUBITS\\PROJECT\\HEDERA_NFT\\contracts\\AuctionContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/AuctionContract.sol",
    "exportedSymbols": {
      "AuctionContract": [
        306
      ],
      "ExpiryHelper": [
        352
      ],
      "FeeHelper": [
        668
      ],
      "HederaResponseCodes": [
        1187
      ],
      "HederaTokenService": [
        2309
      ],
      "IHederaTokenService": [
        3016
      ],
      "KeyHelper": [
        3866
      ]
    },
    "id": 307,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:0"
      },
      {
        "absolutePath": "project:/contracts/HederaResponseCodes.sol",
        "file": "./HederaResponseCodes.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 307,
        "sourceUnit": 1188,
        "src": "70:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IHederaTokenService.sol",
        "file": "./IHederaTokenService.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 307,
        "sourceUnit": 3017,
        "src": "106:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/HederaTokenService.sol",
        "file": "./HederaTokenService.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 307,
        "sourceUnit": 2310,
        "src": "142:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ExpiryHelper.sol",
        "file": "./ExpiryHelper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 307,
        "sourceUnit": 353,
        "src": "177:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "ExpiryHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 352,
              "src": "236:12:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "236:12:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 306,
        "linearizedBaseContracts": [
          306,
          352,
          668,
          3866,
          2309,
          1187
        ],
        "name": "AuctionContract",
        "nameLocation": "217:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AuctionContract.Auction",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "342:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "334:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "334:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "serialNumber",
                "nameLocation": "361:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "355:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int64",
                  "typeString": "int64"
                },
                "typeName": {
                  "id": 10,
                  "name": "int64",
                  "nodeType": "ElementaryTypeName",
                  "src": "355:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "basePrice",
                "nameLocation": "387:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "379:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "auctioner",
                "nameLocation": "410:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "402:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "402:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "currentBidder",
                "nameLocation": "433:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "425:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 16,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "bidAmount",
                "nameLocation": "460:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "452:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "readyToClaim",
                "nameLocation": "480:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "475:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "475:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "claimed",
                "nameLocation": "503:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "498:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 22,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Auction",
            "nameLocation": "320:7:0",
            "nodeType": "StructDefinition",
            "scope": 306,
            "src": "313:202:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d6048df5",
            "id": 26,
            "mutability": "mutable",
            "name": "readyToClaim",
            "nameLocation": "534:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 306,
            "src": "522:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 25,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "522:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e834a834",
            "id": 28,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "563:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 306,
            "src": "551:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 27,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "551:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b4d17850",
            "id": 37,
            "mutability": "mutable",
            "name": "mapAuction",
            "nameLocation": "648:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 306,
            "src": "575:83:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
              "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction)))"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "583:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "575:65:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction)))"
              },
              "valueType": {
                "id": 35,
                "keyType": {
                  "id": 30,
                  "name": "int64",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  }
                },
                "nodeType": "Mapping",
                "src": "594:45:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                  "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction))"
                },
                "valueType": {
                  "id": 34,
                  "keyType": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "611:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                    "typeString": "mapping(address => struct AuctionContract.Auction)"
                  },
                  "valueType": {
                    "id": 33,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32,
                      "name": "Auction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24,
                      "src": "630:7:0"
                    },
                    "referencedDeclaration": 24,
                    "src": "630:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                      "typeString": "struct AuctionContract.Auction"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "917:277:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48,
                          "name": "basePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "935:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "947:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "935:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4372656174652041756374696f6e203a205a65726f20626173652070726963652e",
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "950:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2",
                          "typeString": "literal_string \"Create Auction : Zero base price.\""
                        },
                        "value": "Create Auction : Zero base price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2",
                          "typeString": "literal_string \"Create Auction : Zero base price.\""
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "927:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "927:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "927:59:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "1008:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 85,
                      "src": "992:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 55,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "992:7:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "992:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 57,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1023:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 59,
                        "indexExpression": {
                          "id": 58,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1034:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1023:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 61,
                      "indexExpression": {
                        "id": 60,
                        "name": "serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1043:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1023:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 64,
                    "indexExpression": {
                      "expression": {
                        "id": 62,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1057:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1057:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1023:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:76:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 66,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1074:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "auctioner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1074:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 69,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1099:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1099:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1074:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:35:0"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 73,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1115:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1115:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76,
                      "name": "basePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1140:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1115:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:34:0"
                },
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 79,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1155:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "basePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1155:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82,
                      "name": "basePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1180:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1155:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:34:0"
                }
              ]
            },
            "documentation": {
              "id": 38,
              "nodeType": "StructuredDocumentation",
              "src": "664:151:0",
              "text": " @notice createAuction\n Function to start auction with first bid.\n Validate signatures, stores NFT data and add first bid as well"
            },
            "functionSelector": "9a37e681",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAuction",
            "nameLocation": "830:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "852:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "844:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "serialNumber",
                  "nameLocation": "867:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "861:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "basePrice",
                  "nameLocation": "889:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "881:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:56:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:0:0"
            },
            "scope": 306,
            "src": "821:373:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "1561:720:0",
              "statements": [
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "1584:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 165,
                      "src": "1568:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 99,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "1568:7:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "1568:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 101,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1599:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 103,
                        "indexExpression": {
                          "id": 102,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "1611:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1599:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "id": 104,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1621:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1599:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 107,
                    "indexExpression": {
                      "id": 106,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1636:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1599:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1568:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 110,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1663:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 111,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1673:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "basePrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1673:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1663:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c61636520426964203a205072696365204c657373205468616e207468652062617365207072696365",
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1697:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa",
                          "typeString": "literal_string \"Place Bid : Price Less Than the base price\""
                        },
                        "value": "Place Bid : Price Less Than the base price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa",
                          "typeString": "literal_string \"Place Bid : Price Less Than the base price\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 118,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1756:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 119,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1765:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bidAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "1765:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1756:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c61636520426964203a20546865207072696365206973206c657373207468656e207468652070726576696f75732062696420616d6f756e74",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1789:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212",
                          "typeString": "literal_string \"Place Bid : The price is less then the previous bid amount\""
                        },
                        "value": "Place Bid : The price is less then the previous bid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212",
                          "typeString": "literal_string \"Place Bid : The price is less then the previous bid amount\""
                        }
                      ],
                      "id": 117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1748:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1748:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1748:102:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1864:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1864:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 128,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1877:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1864:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c616365204269643a20416d6f756e7420726563656976656420616e642070726963652073686f756c642062652073616d65",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1885:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107",
                          "typeString": "literal_string \"Place Bid: Amount received and price should be same\""
                        },
                        "value": "Place Bid: Amount received and price should be same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107",
                          "typeString": "literal_string \"Place Bid: Amount received and price should be same\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1856:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1856:83:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 133,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2070:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2070:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2108:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2100:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2100:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2070:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151,
                  "nodeType": "IfStatement",
                  "src": "2066:129:0",
                  "trueBody": {
                    "id": 150,
                    "nodeType": "Block",
                    "src": "2112:83:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 146,
                                "name": "NftOnAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "2165:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                                  "typeString": "struct AuctionContract.Auction storage pointer"
                                }
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bidAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "2165:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 142,
                                    "name": "NftOnAuction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "2128:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                                      "typeString": "struct AuctionContract.Auction storage pointer"
                                    }
                                  },
                                  "id": 143,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currentBidder",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17,
                                  "src": "2128:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2120:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 140,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2120:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2120:35:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2120:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2120:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "2120:68:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 152,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2200:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "2200:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 155,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "2225:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2200:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:31:0"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 158,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2237:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2237:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 161,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2266:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2266:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2237:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2237:39:0"
                }
              ]
            },
            "documentation": {
              "id": 87,
              "nodeType": "StructuredDocumentation",
              "src": "1198:232:0",
              "text": " @notice placeBid\n Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token\n @param _tokenId NFT unique ID\n @param _price bid price   \n @param _auctioner Seller address"
            },
            "functionSelector": "6f3f44cf",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBid",
            "nameLocation": "1442:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1464:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1456:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "1484:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1478:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1478:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1511:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1503:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "1531:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1523:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1450:95:0"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:0:0"
            },
            "scope": 306,
            "src": "1433:848:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "2390:257:0",
              "statements": [
                {
                  "assignments": [
                    177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 177,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "2412:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2396:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 176,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 175,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "2396:7:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "2396:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 185,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 178,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "2427:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 180,
                        "indexExpression": {
                          "id": 179,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "2438:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2427:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 182,
                      "indexExpression": {
                        "id": 181,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2448:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2427:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 184,
                    "indexExpression": {
                      "id": 183,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "2463:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2427:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2396:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 187,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2488:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2488:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 189,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "2502:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "auctioner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "2502:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2488:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536574746c652041756374696f6e203a205265737472696374656420746f2061756374696f6e6572206f722061646d696e21",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2526:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b",
                          "typeString": "literal_string \"Settle Auction : Restricted to auctioner or admin!\""
                        },
                        "value": "Settle Auction : Restricted to auctioner or admin!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b",
                          "typeString": "literal_string \"Settle Auction : Restricted to auctioner or admin!\""
                        }
                      ],
                      "id": 186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2480:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2480:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2480:99:0"
                },
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 195,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "2585:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "readyToClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2585:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2613:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2585:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:32:0"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 201,
                      "name": "readyToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2623:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2638:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2623:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:19:0"
                }
              ]
            },
            "functionSelector": "cd02929f",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleAuction",
            "nameLocation": "2294:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2321:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2313:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2313:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "2341:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2335:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "2368:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2360:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2307:75:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:0:0"
            },
            "scope": 306,
            "src": "2285:362:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "2755:508:0",
              "statements": [
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "2777:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 272,
                      "src": "2761:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 216,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 215,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "2761:7:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "2761:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 218,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "2792:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 220,
                        "indexExpression": {
                          "id": 219,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2803:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2792:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 222,
                      "indexExpression": {
                        "id": 221,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2813:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2792:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 224,
                    "indexExpression": {
                      "id": 223,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2828:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2792:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2761:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 227,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "2853:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "readyToClaim",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "2853:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2882:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2853:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2041756374696f6e203a2041756374696f6e206e6f7420736574746c65642079657421",
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2888:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49a0e13044355ab9ab2b6298c3237d200c6ea10f8bbdcc8dfab1c2e78c3a6246",
                          "typeString": "literal_string \"Claim Auction : Auction not settled yet!\""
                        },
                        "value": "Claim Auction : Auction not settled yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49a0e13044355ab9ab2b6298c3237d200c6ea10f8bbdcc8dfab1c2e78c3a6246",
                          "typeString": "literal_string \"Claim Auction : Auction not settled yet!\""
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2845:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2845:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:86:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 235,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "2945:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "2945:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2969:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2945:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2041756374696f6e203a20546f6b656e20616c726561647920636c61696d656421",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2976:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df8b251cdd5a3411b0b6cc64b24010ccf042c0f54ae17985efbf3f38d17dadb",
                          "typeString": "literal_string \"Claim Auction : Token already claimed!\""
                        },
                        "value": "Claim Auction : Token already claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df8b251cdd5a3411b0b6cc64b24010ccf042c0f54ae17985efbf3f38d17dadb",
                          "typeString": "literal_string \"Claim Auction : Token already claimed!\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2937:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2937:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "2937:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 243,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3031:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3031:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 245,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "3045:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentBidder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "3045:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3031:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2041756374696f6e203a204f6e6c792061756374696f6e2077696d6d65722063616e20636c61696d21",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3073:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d12950b4bdaaad1c60e5d10f5f7628f7dd8658fb046e60480229ff9187be035",
                          "typeString": "literal_string \"Claim Auction : Only auction wimmer can claim!\""
                        },
                        "value": "Claim Auction : Only auction wimmer can claim!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d12950b4bdaaad1c60e5d10f5f7628f7dd8658fb046e60480229ff9187be035",
                          "typeString": "literal_string \"Claim Auction : Only auction wimmer can claim!\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3023:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3023:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "3023:99:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 252,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "3153:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 255,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3171:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AuctionContract_$306",
                              "typeString": "contract AuctionContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AuctionContract_$306",
                              "typeString": "contract AuctionContract"
                            }
                          ],
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3163:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 253,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3163:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3163:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3178:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3178:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 259,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "3191:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      ],
                      "id": 251,
                      "name": "transferNonFungibleToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3128:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$__$",
                        "typeString": "function (address,address,address,int64)"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3128:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3128:77:0"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 262,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "3211:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "3211:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3234:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3211:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "3211:27:0"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 268,
                      "name": "claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "3244:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3254:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3244:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3244:14:0"
                }
              ]
            },
            "functionSelector": "3ad8fe55",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAuction",
            "nameLocation": "2660:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2686:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2678:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "2706:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2700:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2700:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "2733:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2725:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2672:75:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2755:0:0"
            },
            "scope": 306,
            "src": "2651:612:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "3405:223:0",
              "statements": [
                {
                  "assignments": [
                    285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 285,
                      "mutability": "mutable",
                      "name": "responseCode",
                      "nameLocation": "3418:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 304,
                      "src": "3414:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 284,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3414:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 293,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 288,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "3470:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 289,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "3477:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 290,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3485:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 291,
                        "name": "serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3495:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      ],
                      "expression": {
                        "id": 286,
                        "name": "HederaTokenService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2309,
                        "src": "3439:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HederaTokenService_$2309_$",
                          "typeString": "type(contract HederaTokenService)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2308,
                      "src": "3439:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int256_$",
                        "typeString": "function (address,address,address,int64) returns (int256)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3439:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3413:95:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 294,
                      "name": "responseCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "3518:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 295,
                        "name": "HederaResponseCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "3534:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$1187_$",
                          "typeString": "type(contract HederaResponseCodes)"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SUCCESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 739,
                      "src": "3534:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "3518:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 303,
                  "nodeType": "IfStatement",
                  "src": "3515:109:0",
                  "trueBody": {
                    "id": 302,
                    "nodeType": "Block",
                    "src": "3562:62:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f6b656e",
                              "id": 299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3579:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b",
                                "typeString": "literal_string \"Failed to create non-fungible token\""
                              },
                              "value": "Failed to create non-fungible token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b",
                                "typeString": "literal_string \"Failed to create non-fungible token\""
                              }
                            ],
                            "id": 298,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "3572:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3572:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 301,
                        "nodeType": "ExpressionStatement",
                        "src": "3572:45:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "651480b9",
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferNonFungibleToken",
            "nameLocation": "3276:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3314:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3306:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3333:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3325:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3325:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3353:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3345:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "serialNumber",
                  "nameLocation": "3373:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3367:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3367:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3300:89:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3405:0:0"
            },
            "scope": 306,
            "src": "3267:361:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 307,
        "src": "208:3423:0",
        "usedErrors": []
      }
    ],
    "src": "36:3595:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/AuctionContract.sol",
    "exportedSymbols": {
      "AuctionContract": [
        306
      ],
      "ExpiryHelper": [
        352
      ],
      "FeeHelper": [
        668
      ],
      "HederaResponseCodes": [
        1187
      ],
      "HederaTokenService": [
        2309
      ],
      "IHederaTokenService": [
        3016
      ],
      "KeyHelper": [
        3866
      ]
    },
    "id": 307,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:0"
      },
      {
        "absolutePath": "project:/contracts/HederaResponseCodes.sol",
        "file": "./HederaResponseCodes.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 307,
        "sourceUnit": 1188,
        "src": "70:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IHederaTokenService.sol",
        "file": "./IHederaTokenService.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 307,
        "sourceUnit": 3017,
        "src": "106:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/HederaTokenService.sol",
        "file": "./HederaTokenService.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 307,
        "sourceUnit": 2310,
        "src": "142:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ExpiryHelper.sol",
        "file": "./ExpiryHelper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 307,
        "sourceUnit": 353,
        "src": "177:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "ExpiryHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 352,
              "src": "236:12:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "236:12:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 306,
        "linearizedBaseContracts": [
          306,
          352,
          668,
          3866,
          2309,
          1187
        ],
        "name": "AuctionContract",
        "nameLocation": "217:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AuctionContract.Auction",
            "id": 24,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "342:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "334:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "334:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "serialNumber",
                "nameLocation": "361:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "355:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int64",
                  "typeString": "int64"
                },
                "typeName": {
                  "id": 10,
                  "name": "int64",
                  "nodeType": "ElementaryTypeName",
                  "src": "355:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "basePrice",
                "nameLocation": "387:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "379:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "auctioner",
                "nameLocation": "410:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "402:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "402:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "currentBidder",
                "nameLocation": "433:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "425:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 16,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "bidAmount",
                "nameLocation": "460:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "452:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 21,
                "mutability": "mutable",
                "name": "readyToClaim",
                "nameLocation": "480:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "475:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 20,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "475:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23,
                "mutability": "mutable",
                "name": "claimed",
                "nameLocation": "503:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 24,
                "src": "498:12:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 22,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "498:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Auction",
            "nameLocation": "320:7:0",
            "nodeType": "StructDefinition",
            "scope": 306,
            "src": "313:202:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d6048df5",
            "id": 26,
            "mutability": "mutable",
            "name": "readyToClaim",
            "nameLocation": "534:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 306,
            "src": "522:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 25,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "522:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e834a834",
            "id": 28,
            "mutability": "mutable",
            "name": "claimed",
            "nameLocation": "563:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 306,
            "src": "551:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 27,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "551:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b4d17850",
            "id": 37,
            "mutability": "mutable",
            "name": "mapAuction",
            "nameLocation": "648:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 306,
            "src": "575:83:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
              "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction)))"
            },
            "typeName": {
              "id": 36,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "583:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "575:65:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction)))"
              },
              "valueType": {
                "id": 35,
                "keyType": {
                  "id": 30,
                  "name": "int64",
                  "nodeType": "ElementaryTypeName",
                  "src": "602:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  }
                },
                "nodeType": "Mapping",
                "src": "594:45:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                  "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction))"
                },
                "valueType": {
                  "id": 34,
                  "keyType": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "611:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                    "typeString": "mapping(address => struct AuctionContract.Auction)"
                  },
                  "valueType": {
                    "id": 33,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 32,
                      "name": "Auction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 24,
                      "src": "630:7:0"
                    },
                    "referencedDeclaration": 24,
                    "src": "630:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                      "typeString": "struct AuctionContract.Auction"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 85,
              "nodeType": "Block",
              "src": "917:277:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 48,
                          "name": "basePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44,
                          "src": "935:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 49,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "947:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "935:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4372656174652041756374696f6e203a205a65726f20626173652070726963652e",
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "950:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2",
                          "typeString": "literal_string \"Create Auction : Zero base price.\""
                        },
                        "value": "Create Auction : Zero base price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2",
                          "typeString": "literal_string \"Create Auction : Zero base price.\""
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "927:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "927:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "927:59:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "1008:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 85,
                      "src": "992:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 55,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "992:7:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "992:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 57,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1023:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 59,
                        "indexExpression": {
                          "id": 58,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "1034:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1023:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 61,
                      "indexExpression": {
                        "id": 60,
                        "name": "serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1043:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1023:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 64,
                    "indexExpression": {
                      "expression": {
                        "id": 62,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1057:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 63,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1057:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1023:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "992:76:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 66,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1074:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 68,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "auctioner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1074:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 69,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1099:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1099:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1074:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1074:35:0"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 73,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1115:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1115:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76,
                      "name": "basePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1140:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1115:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1115:34:0"
                },
                {
                  "expression": {
                    "id": 83,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 79,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1155:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "basePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1155:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 82,
                      "name": "basePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1180:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1155:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 84,
                  "nodeType": "ExpressionStatement",
                  "src": "1155:34:0"
                }
              ]
            },
            "documentation": {
              "id": 38,
              "nodeType": "StructuredDocumentation",
              "src": "664:151:0",
              "text": " @notice createAuction\n Function to start auction with first bid.\n Validate signatures, stores NFT data and add first bid as well"
            },
            "functionSelector": "9a37e681",
            "id": 86,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAuction",
            "nameLocation": "830:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "852:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "844:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "serialNumber",
                  "nameLocation": "867:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "861:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "861:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "mutability": "mutable",
                  "name": "basePrice",
                  "nameLocation": "889:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 86,
                  "src": "881:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:56:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "917:0:0"
            },
            "scope": 306,
            "src": "821:373:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "1561:720:0",
              "statements": [
                {
                  "assignments": [
                    100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "1584:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 165,
                      "src": "1568:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 99,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "1568:7:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "1568:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 108,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 101,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1599:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 103,
                        "indexExpression": {
                          "id": 102,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89,
                          "src": "1611:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1599:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 105,
                      "indexExpression": {
                        "id": 104,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 91,
                        "src": "1621:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1599:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 107,
                    "indexExpression": {
                      "id": 106,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 95,
                      "src": "1636:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1599:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1568:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 110,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1663:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 111,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1673:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "basePrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1673:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1663:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c61636520426964203a205072696365204c657373205468616e207468652062617365207072696365",
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1697:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa",
                          "typeString": "literal_string \"Place Bid : Price Less Than the base price\""
                        },
                        "value": "Place Bid : Price Less Than the base price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa",
                          "typeString": "literal_string \"Place Bid : Price Less Than the base price\""
                        }
                      ],
                      "id": 109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1655:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1655:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1655:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 118,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1756:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 119,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100,
                            "src": "1765:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 120,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bidAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "1765:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1756:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c61636520426964203a20546865207072696365206973206c657373207468656e207468652070726576696f75732062696420616d6f756e74",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1789:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212",
                          "typeString": "literal_string \"Place Bid : The price is less then the previous bid amount\""
                        },
                        "value": "Place Bid : The price is less then the previous bid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212",
                          "typeString": "literal_string \"Place Bid : The price is less then the previous bid amount\""
                        }
                      ],
                      "id": 117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1748:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1748:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "1748:102:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 126,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1864:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1864:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 128,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 93,
                          "src": "1877:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1864:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c616365204269643a20416d6f756e7420726563656976656420616e642070726963652073686f756c642062652073616d65",
                        "id": 130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1885:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107",
                          "typeString": "literal_string \"Place Bid: Amount received and price should be same\""
                        },
                        "value": "Place Bid: Amount received and price should be same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107",
                          "typeString": "literal_string \"Place Bid: Amount received and price should be same\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1856:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1856:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 132,
                  "nodeType": "ExpressionStatement",
                  "src": "1856:83:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 133,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2070:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 134,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2070:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2108:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2100:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2100:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2100:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2070:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 151,
                  "nodeType": "IfStatement",
                  "src": "2066:129:0",
                  "trueBody": {
                    "id": 150,
                    "nodeType": "Block",
                    "src": "2112:83:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 146,
                                "name": "NftOnAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100,
                                "src": "2165:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                                  "typeString": "struct AuctionContract.Auction storage pointer"
                                }
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bidAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "2165:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 142,
                                    "name": "NftOnAuction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 100,
                                    "src": "2128:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                                      "typeString": "struct AuctionContract.Auction storage pointer"
                                    }
                                  },
                                  "id": 143,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currentBidder",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17,
                                  "src": "2128:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 141,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2120:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 140,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2120:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2120:35:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2120:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2120:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "2120:68:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 152,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2200:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "2200:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 155,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 93,
                      "src": "2225:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2200:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "2200:31:0"
                },
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 158,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "2237:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 160,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2237:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 161,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2266:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2266:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2237:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "2237:39:0"
                }
              ]
            },
            "documentation": {
              "id": 87,
              "nodeType": "StructuredDocumentation",
              "src": "1198:232:0",
              "text": " @notice placeBid\n Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token\n @param _tokenId NFT unique ID\n @param _price bid price   \n @param _auctioner Seller address"
            },
            "functionSelector": "6f3f44cf",
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBid",
            "nameLocation": "1442:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 96,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1464:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1456:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "1484:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1478:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1478:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 93,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1511:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1503:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 92,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1503:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 95,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "1531:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "1523:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 94,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1523:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1450:95:0"
            },
            "returnParameters": {
              "id": 97,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1561:0:0"
            },
            "scope": 306,
            "src": "1433:848:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "2390:257:0",
              "statements": [
                {
                  "assignments": [
                    177
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 177,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "2412:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "2396:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 176,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 175,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "2396:7:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "2396:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 185,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 178,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "2427:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 180,
                        "indexExpression": {
                          "id": 179,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "2438:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2427:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 182,
                      "indexExpression": {
                        "id": 181,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 170,
                        "src": "2448:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2427:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 184,
                    "indexExpression": {
                      "id": 183,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 172,
                      "src": "2463:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2427:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2396:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 187,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2488:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2488:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 189,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "2502:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 190,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "auctioner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "2502:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2488:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536574746c652041756374696f6e203a205265737472696374656420746f2061756374696f6e6572206f722061646d696e21",
                        "id": 192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2526:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b",
                          "typeString": "literal_string \"Settle Auction : Restricted to auctioner or admin!\""
                        },
                        "value": "Settle Auction : Restricted to auctioner or admin!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b",
                          "typeString": "literal_string \"Settle Auction : Restricted to auctioner or admin!\""
                        }
                      ],
                      "id": 186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2480:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2480:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2480:99:0"
                },
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 195,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "2585:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 197,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "readyToClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21,
                      "src": "2585:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2613:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2585:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:32:0"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 201,
                      "name": "readyToClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "2623:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2638:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2623:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:19:0"
                }
              ]
            },
            "functionSelector": "cd02929f",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleAuction",
            "nameLocation": "2294:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2321:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2313:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2313:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 170,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "2341:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2335:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 169,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 172,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "2368:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 206,
                  "src": "2360:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2360:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2307:75:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2390:0:0"
            },
            "scope": 306,
            "src": "2285:362:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "2755:508:0",
              "statements": [
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "2777:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 272,
                      "src": "2761:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 216,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 215,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 24,
                          "src": "2761:7:0"
                        },
                        "referencedDeclaration": 24,
                        "src": "2761:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 218,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "2792:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 220,
                        "indexExpression": {
                          "id": 219,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 208,
                          "src": "2803:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2792:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 222,
                      "indexExpression": {
                        "id": 221,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "2813:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2792:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$24_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 224,
                    "indexExpression": {
                      "id": 223,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 212,
                      "src": "2828:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2792:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$24_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2761:78:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 227,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "2853:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "readyToClaim",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 21,
                          "src": "2853:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2882:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2853:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2041756374696f6e203a2041756374696f6e206e6f7420736574746c65642079657421",
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2888:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_49a0e13044355ab9ab2b6298c3237d200c6ea10f8bbdcc8dfab1c2e78c3a6246",
                          "typeString": "literal_string \"Claim Auction : Auction not settled yet!\""
                        },
                        "value": "Claim Auction : Auction not settled yet!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_49a0e13044355ab9ab2b6298c3237d200c6ea10f8bbdcc8dfab1c2e78c3a6246",
                          "typeString": "literal_string \"Claim Auction : Auction not settled yet!\""
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2845:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2845:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "2845:86:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 235,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "2945:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 236,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "claimed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23,
                          "src": "2945:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2969:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "2945:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2041756374696f6e203a20546f6b656e20616c726561647920636c61696d656421",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2976:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7df8b251cdd5a3411b0b6cc64b24010ccf042c0f54ae17985efbf3f38d17dadb",
                          "typeString": "literal_string \"Claim Auction : Token already claimed!\""
                        },
                        "value": "Claim Auction : Token already claimed!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7df8b251cdd5a3411b0b6cc64b24010ccf042c0f54ae17985efbf3f38d17dadb",
                          "typeString": "literal_string \"Claim Auction : Token already claimed!\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2937:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2937:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "2937:80:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 243,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3031:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3031:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 245,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 217,
                            "src": "3045:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 246,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "currentBidder",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "3045:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3031:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436c61696d2041756374696f6e203a204f6e6c792061756374696f6e2077696d6d65722063616e20636c61696d21",
                        "id": 248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3073:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d12950b4bdaaad1c60e5d10f5f7628f7dd8658fb046e60480229ff9187be035",
                          "typeString": "literal_string \"Claim Auction : Only auction wimmer can claim!\""
                        },
                        "value": "Claim Auction : Only auction wimmer can claim!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d12950b4bdaaad1c60e5d10f5f7628f7dd8658fb046e60480229ff9187be035",
                          "typeString": "literal_string \"Claim Auction : Only auction wimmer can claim!\""
                        }
                      ],
                      "id": 242,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3023:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3023:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 250,
                  "nodeType": "ExpressionStatement",
                  "src": "3023:99:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 252,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 208,
                        "src": "3153:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 255,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3171:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AuctionContract_$306",
                              "typeString": "contract AuctionContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AuctionContract_$306",
                              "typeString": "contract AuctionContract"
                            }
                          ],
                          "id": 254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3163:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 253,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3163:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3163:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 257,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3178:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3178:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 259,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 210,
                        "src": "3191:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      ],
                      "id": 251,
                      "name": "transferNonFungibleToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 305,
                      "src": "3128:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$__$",
                        "typeString": "function (address,address,address,int64)"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3128:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "ExpressionStatement",
                  "src": "3128:77:0"
                },
                {
                  "expression": {
                    "id": 266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 262,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 217,
                        "src": "3211:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$24_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "claimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 23,
                      "src": "3211:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 265,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3234:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3211:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 267,
                  "nodeType": "ExpressionStatement",
                  "src": "3211:27:0"
                },
                {
                  "expression": {
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 268,
                      "name": "claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "3244:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3254:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3244:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "3244:14:0"
                }
              ]
            },
            "functionSelector": "3ad8fe55",
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimAuction",
            "nameLocation": "2660:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2686:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2678:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 210,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "2706:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2700:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 209,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2700:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "2733:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2725:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2725:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2672:75:0"
            },
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2755:0:0"
            },
            "scope": 306,
            "src": "2651:612:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 304,
              "nodeType": "Block",
              "src": "3405:223:0",
              "statements": [
                {
                  "assignments": [
                    285
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 285,
                      "mutability": "mutable",
                      "name": "responseCode",
                      "nameLocation": "3418:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 304,
                      "src": "3414:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 284,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "3414:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 293,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 288,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "3470:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 289,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "3477:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 290,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "3485:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 291,
                        "name": "serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "3495:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      ],
                      "expression": {
                        "id": 286,
                        "name": "HederaTokenService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2309,
                        "src": "3439:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HederaTokenService_$2309_$",
                          "typeString": "type(contract HederaTokenService)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2308,
                      "src": "3439:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int256_$",
                        "typeString": "function (address,address,address,int64) returns (int256)"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3439:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3413:95:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 294,
                      "name": "responseCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 285,
                      "src": "3518:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 295,
                        "name": "HederaResponseCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1187,
                        "src": "3534:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$1187_$",
                          "typeString": "type(contract HederaResponseCodes)"
                        }
                      },
                      "id": 296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SUCCESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 739,
                      "src": "3534:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "3518:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 303,
                  "nodeType": "IfStatement",
                  "src": "3515:109:0",
                  "trueBody": {
                    "id": 302,
                    "nodeType": "Block",
                    "src": "3562:62:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f6b656e",
                              "id": 299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3579:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b",
                                "typeString": "literal_string \"Failed to create non-fungible token\""
                              },
                              "value": "Failed to create non-fungible token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b",
                                "typeString": "literal_string \"Failed to create non-fungible token\""
                              }
                            ],
                            "id": 298,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "3572:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3572:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 301,
                        "nodeType": "ExpressionStatement",
                        "src": "3572:45:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "651480b9",
            "id": 305,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferNonFungibleToken",
            "nameLocation": "3276:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3314:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3306:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3306:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 277,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "3333:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3325:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 276,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3325:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "3353:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3345:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "serialNumber",
                  "nameLocation": "3373:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 305,
                  "src": "3367:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 280,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "3367:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3300:89:0"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3405:0:0"
            },
            "scope": 306,
            "src": "3267:361:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 307,
        "src": "208:3423:0",
        "usedErrors": []
      }
    ],
    "src": "36:3595:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-11-17T05:48:25.155Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "placeBid(address,int64,uint256,address)": {
        "params": {
          "_auctioner": "Seller address",
          "_price": "bid price   ",
          "_tokenId": "NFT unique ID"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createAuction(address,int64,uint256)": {
        "notice": "createAuction Function to start auction with first bid. Validate signatures, stores NFT data and add first bid as well"
      },
      "placeBid(address,int64,uint256,address)": {
        "notice": "placeBid Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token"
      }
    },
    "version": 1
  }
}