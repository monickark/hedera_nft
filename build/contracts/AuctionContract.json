{
  "contractName": "AuctionContract",
  "abi": [
    {
      "inputs": [],
      "name": "bidder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "",
          "type": "int64"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mapAuction",
      "outputs": [
        {
          "internalType": "address",
          "name": "tokenId",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "serialNumber",
          "type": "int64"
        },
        {
          "internalType": "uint256",
          "name": "basePrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "auctioner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "currentBidder",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "bidAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenId",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "serialNumber",
          "type": "int64"
        },
        {
          "internalType": "uint256",
          "name": "basePrice",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "_serialNumber",
          "type": "int64"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_auctioner",
          "type": "address"
        }
      ],
      "name": "placeBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenId",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "_serialNumber",
          "type": "int64"
        },
        {
          "internalType": "address",
          "name": "_auctioner",
          "type": "address"
        }
      ],
      "name": "settleAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "int64",
          "name": "serialNumber",
          "type": "int64"
        }
      ],
      "name": "transferNonFungibleToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mapAuction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"basePrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"auctioner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentBidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bidAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"_serialNumber\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_auctioner\",\"type\":\"address\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenId\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"_serialNumber\",\"type\":\"int64\"},{\"internalType\":\"address\",\"name\":\"_auctioner\",\"type\":\"address\"}],\"name\":\"settleAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"int64\",\"name\":\"serialNumber\",\"type\":\"int64\"}],\"name\":\"transferNonFungibleToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"placeBid(address,int64,uint256,address)\":{\"params\":{\"_auctioner\":\"Seller address\",\"_price\":\"bid price\",\"_tokenId\":\"NFT unique ID\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAuction(address,int64,uint256)\":{\"notice\":\"createAuction Function to start auction with first bid. Validate signatures, stores NFT data and add first bid as well\"},\"placeBid(address,int64,uint256,address)\":{\"notice\":\"placeBid Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/AuctionContract.sol\":\"AuctionContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/AuctionContract.sol\":{\"keccak256\":\"0x38f1d20387c970fac181adfcc9b6a7c9470ee376d8f8f0bb483c3ff3096b87d7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f26d2f8047ebf679554493717fdc8e10b591a7804045af79ee8b9d2d2e34bc1e\",\"dweb:/ipfs/QmShLTdxBHuZcc1SoDYbk8ci3ZVkborXZYCkYrPLoXNv3a\"]},\"project:/contracts/ExpiryHelper.sol\":{\"keccak256\":\"0x583f3daf18bc4bbab607613f1ba8f8da87b6516d8348f71926a940f3534cd16e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://3fc080a4338185053610bcfcdeea96162a7165054bbae6a241af297157332c4e\",\"dweb:/ipfs/QmczTVXDDk6u5SvgCwzdizd23xWGU8FzNNAvxmWpDbZJL3\"]},\"project:/contracts/FeeHelper.sol\":{\"keccak256\":\"0xdb9aaac0edf1b7daa1f9a2c3000dbf6ad1f36c27f9c04c56eba3592957b6d7d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ca574428757cf75a43500c2f1198e1e957183a64b1f886651624fd81665f7ffa\",\"dweb:/ipfs/QmNnc41tm9LmC2TD4tLLESyFQTBemVVWZVkManrCD4YG4Q\"]},\"project:/contracts/HederaResponseCodes.sol\":{\"keccak256\":\"0x1b0a4e16c2cf238e15dc6c98789a32bb0186cbbed419efe593d74ff8051709de\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://24f4deaaa2acfc381fe91c989f8183429251f2d4bf5823c225fe95018b140ad0\",\"dweb:/ipfs/QmUBi59xPjxXJCZ3hpveN3cpBQupQXiqGy3TGvccoBVJDb\"]},\"project:/contracts/HederaTokenService.sol\":{\"keccak256\":\"0xc07d56e1b28a960af45e4c837e7896e44b5c66b706bbad1fb27dfb0e088b0df2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://93fd0bdeed12dd2db314c94dbc7385fe94c5c148cfc974d854707e7ddc4d678a\",\"dweb:/ipfs/QmfJn9z2hUif16hvVqrJhNXfzpDRtYm9dhDdrENgToCV2x\"]},\"project:/contracts/IHederaTokenService.sol\":{\"keccak256\":\"0xb95b948c23b3b0bbe9f7aa5aa6c2788c0f860f9569bb6441639baf96e0ee62a2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad6cfa6073043c4d0a8cb8a8250bc19040eb5a07c044cdaaded397db8d5fee1d\",\"dweb:/ipfs/QmfVeEL8dG8qCJEUpokRvzcLoT2ydJBUfHVn1WiUmqCAK8\"]},\"project:/contracts/KeyHelper.sol\":{\"keccak256\":\"0x0d2bf35d0c8d6fb026801c9df54872a00837fe5a510e4ae713bf9e23aa2ac83e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c60d4e2840a57669d57a42ca5682f3bfbd9abcc32b0e4e7fe89874b595d0be6b\",\"dweb:/ipfs/QmarV2kd7t7M1GC2hWkYbP8HsTjL1edyRYkfLoDhCJxcCT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610a89806100206000396000f3fe608060405260043610610071577c01000000000000000000000000000000000000000000000000000000006000350463651480b981146100765780636f3f44cf1461008b5780639a37e6811461009e578063b4d17850146100b1578063cd02929f1461017a578063f496d8821461019a575b600080fd5b6100896100843660046108d9565b6101d2565b005b6100896100993660046109ac565b610267565b6100896100ac366004610970565b61052d565b3480156100bd57600080fd5b506101336100cc36600461092d565b6000602081815293815260408082208552928152828120909352825290208054600182015460028301546003840154600490940154600160a060020a03808516957401000000000000000000000000000000000000000090950460070b9492811692169086565b60408051600160a060020a03978816815260079690960b60208701528501939093529084166060840152909216608082015260a081019190915260c0015b60405180910390f35b34801561018657600080fd5b5061008961019536600461092d565b610609565b3480156101a657600080fd5b506001546101ba90600160a060020a031681565b604051600160a060020a039091168152602001610171565b60006101e085858585610795565b9050601681146102605760405160e560020a62461bcd02815260206004820152602360248201527f4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f60448201527f6b656e000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5050505050565b600160a060020a03808516600090815260208181526040808320600788810b900b8452825280832093851683529290522060018101548310156103155760405160e560020a62461bcd02815260206004820152602a60248201527f506c61636520426964203a205072696365204c657373205468616e207468652060448201527f62617365207072696365000000000000000000000000000000000000000000006064820152608401610257565b806004015483116103915760405160e560020a62461bcd02815260206004820152603a60248201527f506c61636520426964203a20546865207072696365206973206c65737320746860448201527f656e207468652070726576696f75732062696420616d6f756e740000000000006064820152608401610257565b8234146104095760405160e560020a62461bcd02815260206004820152603360248201527f506c616365204269643a20416d6f756e7420726563656976656420616e64207060448201527f726963652073686f756c642062652073616d65000000000000000000000000006064820152608401610257565b806004015434116104ab5760405160e560020a62461bcd02815260206004820152604160248201527f506c616365204269643a20416d6f756e742072656365697665642073686f756c60448201527f642062652067726174686572207468616e207468652063757272656e7420626960648201527f6400000000000000000000000000000000000000000000000000000000000000608482015260a401610257565b6003810154600160a060020a0316156105005760038101546004820154604051600160a060020a039092169181156108fc0291906000818181858888f193505050501580156104fe573d6000803e3d6000fd5b505b600481019290925550600301805473ffffffffffffffffffffffffffffffffffffffff1916331790555050565b600081116105a65760405160e560020a62461bcd02815260206004820152602160248201527f4372656174652041756374696f6e203a205a65726f206261736520707269636560448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610257565b600160a060020a03909216600090815260208181526040808320600794850b90940b835292815282822033808452915291902060028101805473ffffffffffffffffffffffffffffffffffffffff19169092179091556004810182905560010155565b600160a060020a03808416600090815260208181526040808320600787810b900b845282528083208585168452909152902060038101546001805473ffffffffffffffffffffffffffffffffffffffff191691841691909117905560028101549091339116146106e45760405160e560020a62461bcd02815260206004820152603260248201527f536574746c652041756374696f6e203a205265737472696374656420746f206160448201527f756374696f6e6572206f722061646d696e2100000000000000000000000000006064820152608401610257565b60038101546107009085903090600160a060020a0316866101d2565b50600160a060020a03928316600090815260208181526040808320600795860b90950b83529381528382209290941681529252812080547fffffffff000000000000000000000000000000000000000000000000000000001681556001810182905560028101805473ffffffffffffffffffffffffffffffffffffffff19908116909155600382018054909116905560040155565b60408051600160a060020a038681166024830152858116604483015284166064820152600783900b6084808301919091528251808303909101815260a490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5cfc901100000000000000000000000000000000000000000000000000000000179052905160009182918291610167916108369190610a18565b6000604051808303816000865af19150503d8060008114610873576040519150601f19603f3d011682016040523d82523d6000602084013e610878565b606091505b50915091508161088957601561089d565b8080602001905181019061089d91906109ee565b60030b979650505050505050565b8035600160a060020a03811681146108c257600080fd5b919050565b8035600781900b81146108c257600080fd5b600080600080608085870312156108ef57600080fd5b6108f8856108ab565b9350610906602086016108ab565b9250610914604086016108ab565b9150610922606086016108c7565b905092959194509250565b60008060006060848603121561094257600080fd5b61094b846108ab565b9250610959602085016108c7565b9150610967604085016108ab565b90509250925092565b60008060006060848603121561098557600080fd5b61098e846108ab565b925061099c602085016108c7565b9150604084013590509250925092565b600080600080608085870312156109c257600080fd5b6109cb856108ab565b93506109d9602086016108c7565b925060408501359150610922606086016108ab565b600060208284031215610a0057600080fd5b81518060030b8114610a1157600080fd5b9392505050565b6000825160005b81811015610a395760208186018101518583015201610a1f565b81811115610a48576000828501525b50919091019291505056fea2646970667358221220bd42082181638b933cf92c1e9be2f8cc5c1194e2c02eab53ac01a468ebedbb7f64736f6c63430008060033",
  "deployedBytecode": "0x608060405260043610610071577c01000000000000000000000000000000000000000000000000000000006000350463651480b981146100765780636f3f44cf1461008b5780639a37e6811461009e578063b4d17850146100b1578063cd02929f1461017a578063f496d8821461019a575b600080fd5b6100896100843660046108d9565b6101d2565b005b6100896100993660046109ac565b610267565b6100896100ac366004610970565b61052d565b3480156100bd57600080fd5b506101336100cc36600461092d565b6000602081815293815260408082208552928152828120909352825290208054600182015460028301546003840154600490940154600160a060020a03808516957401000000000000000000000000000000000000000090950460070b9492811692169086565b60408051600160a060020a03978816815260079690960b60208701528501939093529084166060840152909216608082015260a081019190915260c0015b60405180910390f35b34801561018657600080fd5b5061008961019536600461092d565b610609565b3480156101a657600080fd5b506001546101ba90600160a060020a031681565b604051600160a060020a039091168152602001610171565b60006101e085858585610795565b9050601681146102605760405160e560020a62461bcd02815260206004820152602360248201527f4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f60448201527f6b656e000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b5050505050565b600160a060020a03808516600090815260208181526040808320600788810b900b8452825280832093851683529290522060018101548310156103155760405160e560020a62461bcd02815260206004820152602a60248201527f506c61636520426964203a205072696365204c657373205468616e207468652060448201527f62617365207072696365000000000000000000000000000000000000000000006064820152608401610257565b806004015483116103915760405160e560020a62461bcd02815260206004820152603a60248201527f506c61636520426964203a20546865207072696365206973206c65737320746860448201527f656e207468652070726576696f75732062696420616d6f756e740000000000006064820152608401610257565b8234146104095760405160e560020a62461bcd02815260206004820152603360248201527f506c616365204269643a20416d6f756e7420726563656976656420616e64207060448201527f726963652073686f756c642062652073616d65000000000000000000000000006064820152608401610257565b806004015434116104ab5760405160e560020a62461bcd02815260206004820152604160248201527f506c616365204269643a20416d6f756e742072656365697665642073686f756c60448201527f642062652067726174686572207468616e207468652063757272656e7420626960648201527f6400000000000000000000000000000000000000000000000000000000000000608482015260a401610257565b6003810154600160a060020a0316156105005760038101546004820154604051600160a060020a039092169181156108fc0291906000818181858888f193505050501580156104fe573d6000803e3d6000fd5b505b600481019290925550600301805473ffffffffffffffffffffffffffffffffffffffff1916331790555050565b600081116105a65760405160e560020a62461bcd02815260206004820152602160248201527f4372656174652041756374696f6e203a205a65726f206261736520707269636560448201527f2e000000000000000000000000000000000000000000000000000000000000006064820152608401610257565b600160a060020a03909216600090815260208181526040808320600794850b90940b835292815282822033808452915291902060028101805473ffffffffffffffffffffffffffffffffffffffff19169092179091556004810182905560010155565b600160a060020a03808416600090815260208181526040808320600787810b900b845282528083208585168452909152902060038101546001805473ffffffffffffffffffffffffffffffffffffffff191691841691909117905560028101549091339116146106e45760405160e560020a62461bcd02815260206004820152603260248201527f536574746c652041756374696f6e203a205265737472696374656420746f206160448201527f756374696f6e6572206f722061646d696e2100000000000000000000000000006064820152608401610257565b60038101546107009085903090600160a060020a0316866101d2565b50600160a060020a03928316600090815260208181526040808320600795860b90950b83529381528382209290941681529252812080547fffffffff000000000000000000000000000000000000000000000000000000001681556001810182905560028101805473ffffffffffffffffffffffffffffffffffffffff19908116909155600382018054909116905560040155565b60408051600160a060020a038681166024830152858116604483015284166064820152600783900b6084808301919091528251808303909101815260a490910182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f5cfc901100000000000000000000000000000000000000000000000000000000179052905160009182918291610167916108369190610a18565b6000604051808303816000865af19150503d8060008114610873576040519150601f19603f3d011682016040523d82523d6000602084013e610878565b606091505b50915091508161088957601561089d565b8080602001905181019061089d91906109ee565b60030b979650505050505050565b8035600160a060020a03811681146108c257600080fd5b919050565b8035600781900b81146108c257600080fd5b600080600080608085870312156108ef57600080fd5b6108f8856108ab565b9350610906602086016108ab565b9250610914604086016108ab565b9150610922606086016108c7565b905092959194509250565b60008060006060848603121561094257600080fd5b61094b846108ab565b9250610959602085016108c7565b9150610967604085016108ab565b90509250925092565b60008060006060848603121561098557600080fd5b61098e846108ab565b925061099c602085016108c7565b9150604084013590509250925092565b600080600080608085870312156109c257600080fd5b6109cb856108ab565b93506109d9602086016108c7565b925060408501359150610922606086016108ab565b600060208284031215610a0057600080fd5b81518060030b8114610a1157600080fd5b9392505050565b6000825160005b81811015610a395760208186018101518583015201610a1f565b81811115610a48576000828501525b50919091019291505056fea2646970667358221220bd42082181638b933cf92c1e9be2f8cc5c1194e2c02eab53ac01a468ebedbb7f64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:6890:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:147:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "188:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "197:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "200:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "190:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "190:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "190:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "142:42:10",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:54:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:65:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:73:10"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:10"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:10",
                "type": ""
              }
            ],
            "src": "14:196:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:113:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "272:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "294:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "281:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "281:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "272:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "353:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "362:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "365:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "355:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "355:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "355:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "323:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "341:1:10",
                                "type": "",
                                "value": "7"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "344:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "signextend",
                              "nodeType": "YulIdentifier",
                              "src": "330:10:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "330:20:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "320:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "320:31:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "313:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "313:39:10"
                  },
                  "nodeType": "YulIf",
                  "src": "310:2:10"
                }
              ]
            },
            "name": "abi_decode_int64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "241:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "252:5:10",
                "type": ""
              }
            ],
            "src": "215:160:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "499:286:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "546:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "555:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "558:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "548:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "548:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "548:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "520:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "529:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "516:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "516:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "541:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "512:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "509:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "571:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "600:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "581:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "581:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "571:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "619:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "652:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "663:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "648:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "648:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "629:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "629:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "619:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "676:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "709:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "720:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "705:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "705:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "686:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "686:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "676:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "733:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "764:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "775:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "760:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "760:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int64",
                      "nodeType": "YulIdentifier",
                      "src": "743:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "733:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_addresst_int64",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "441:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "452:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "464:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "472:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "480:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "488:6:10",
                "type": ""
              }
            ],
            "src": "380:405:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "892:228:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "938:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "947:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "950:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "940:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "940:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "940:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "913:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "922:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "909:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "909:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "934:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "905:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "902:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "963:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "992:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "973:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "963:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1011:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1042:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1053:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1038:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1038:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int64",
                      "nodeType": "YulIdentifier",
                      "src": "1021:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1021:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1011:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1066:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1099:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1110:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1095:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1076:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1076:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1066:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_int64t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "842:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "853:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "865:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "873:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "881:6:10",
                "type": ""
              }
            ],
            "src": "790:330:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1227:222:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1273:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1282:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1285:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1275:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1275:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1275:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1248:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1257:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1244:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1244:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1269:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1240:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1237:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1327:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1308:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1308:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1298:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1346:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1377:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1388:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1373:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1373:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int64",
                      "nodeType": "YulIdentifier",
                      "src": "1356:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1356:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1346:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1401:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1428:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1439:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1424:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1424:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1411:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1411:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1401:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_int64t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1177:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1188:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1200:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1208:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1216:6:10",
                "type": ""
              }
            ],
            "src": "1125:324:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1573:280:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1620:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1629:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1632:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1622:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1622:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1622:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1594:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1603:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1590:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1590:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1615:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1586:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1586:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1583:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1645:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1674:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1655:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1655:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1645:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1693:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1724:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1735:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1720:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1720:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_int64",
                      "nodeType": "YulIdentifier",
                      "src": "1703:16:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1703:36:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1693:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1748:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1775:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1786:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1771:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1771:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1758:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1758:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1748:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1799:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1832:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1843:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1828:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1828:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1809:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1809:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1799:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_int64t_uint256t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1515:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1526:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1538:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1546:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1554:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1562:6:10",
                "type": ""
              }
            ],
            "src": "1454:399:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1937:198:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1983:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1992:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1995:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1985:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1985:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1985:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1958:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1967:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1954:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1954:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1979:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1950:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1950:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1947:2:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2008:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2027:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2021:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:16:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2012:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2089:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2098:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2101:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2091:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2091:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2091:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2059:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2077:1:10",
                                "type": "",
                                "value": "3"
                              },
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2080:5:10"
                              }
                            ],
                            "functionName": {
                              "name": "signextend",
                              "nodeType": "YulIdentifier",
                              "src": "2066:10:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2066:20:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2056:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2056:31:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2049:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:39:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2046:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2114:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2124:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2114:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1903:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1914:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1926:6:10",
                "type": ""
              }
            ],
            "src": "1858:277:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2277:289:10",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2287:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2307:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2301:5:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2301:13:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2291:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2323:10:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2332:1:10",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2327:1:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2394:77:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2419:3:10"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2424:1:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2415:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2415:11:10"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2442:6:10"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2450:1:10"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2438:3:10"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2438:14:10"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2454:4:10",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2434:3:10"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2434:25:10"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2428:5:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2428:32:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2408:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2408:53:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2408:53:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2353:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2356:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2350:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2350:13:10"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2364:21:10",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2366:17:10",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2375:1:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2378:4:10",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2371:3:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2371:12:10"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2366:1:10"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2346:3:10",
                    "statements": []
                  },
                  "src": "2342:129:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2497:31:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "2510:3:10"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2515:6:10"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2506:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2506:16:10"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2524:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2499:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2499:27:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2499:27:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2486:1:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2489:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2483:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2483:13:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2480:2:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2537:23:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2548:3:10"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2553:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2544:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:16:10"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2537:3:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2253:3:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2258:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2269:3:10",
                "type": ""
              }
            ],
            "src": "2140:426:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2672:125:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2682:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2694:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2705:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2690:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2690:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2682:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2724:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2739:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2747:42:10",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2735:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2735:55:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2717:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2717:74:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2717:74:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2641:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2652:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2663:4:10",
                "type": ""
              }
            ],
            "src": "2571:226:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2983:309:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2993:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3005:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3016:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3001:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3001:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2993:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3029:52:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3039:42:10",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3033:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3097:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3112:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3120:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3108:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3108:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3090:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3090:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3090:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3144:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3155:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3140:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3140:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3164:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3172:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3160:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3160:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3133:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3133:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3133:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3196:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3207:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3192:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3192:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3216:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3224:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3212:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3212:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3185:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3185:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3185:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3248:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3259:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3244:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3244:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3275:1:10",
                            "type": "",
                            "value": "7"
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3278:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "signextend",
                          "nodeType": "YulIdentifier",
                          "src": "3264:10:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3264:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3237:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3237:49:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3237:49:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2928:9:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2939:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2947:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2955:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2963:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2974:4:10",
                "type": ""
              }
            ],
            "src": "2802:490:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3534:397:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3544:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3556:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3567:3:10",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3552:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3552:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3544:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3580:52:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "3590:42:10",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3584:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3648:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3663:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3671:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3659:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3659:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3641:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3641:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3695:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3706:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3691:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3691:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3722:1:10",
                            "type": "",
                            "value": "7"
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3725:6:10"
                          }
                        ],
                        "functionName": {
                          "name": "signextend",
                          "nodeType": "YulIdentifier",
                          "src": "3711:10:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3711:21:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3684:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3684:49:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3684:49:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3753:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3764:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3749:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3749:18:10"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3769:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3742:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3742:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3742:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3796:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3807:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3792:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3792:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3816:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3824:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3812:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3812:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3785:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3785:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3785:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3848:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3859:3:10",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3844:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3844:19:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "3869:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3877:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3865:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3865:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3837:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3837:44:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3837:44:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3901:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3912:3:10",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3897:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3897:19:10"
                      },
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "3918:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3890:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3890:35:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3890:35:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_int64_t_uint256_t_address_t_address_t_uint256__to_t_address_t_int64_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3463:9:10",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3474:6:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3482:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3490:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3498:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3506:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3514:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3525:4:10",
                "type": ""
              }
            ],
            "src": "3297:634:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4110:232:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4127:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4138:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4120:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4120:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4120:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4161:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4172:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4157:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4157:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4177:2:10",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4150:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4150:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4150:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4200:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4211:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4196:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4196:18:10"
                      },
                      {
                        "hexValue": "506c61636520426964203a205072696365204c657373205468616e2074686520",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4216:34:10",
                        "type": "",
                        "value": "Place Bid : Price Less Than the "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4189:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4189:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4189:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4271:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4282:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4267:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4267:18:10"
                      },
                      {
                        "hexValue": "62617365207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4287:12:10",
                        "type": "",
                        "value": "base price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4260:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4260:40:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4260:40:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4309:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4321:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4332:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4317:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4317:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4309:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4087:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4101:4:10",
                "type": ""
              }
            ],
            "src": "3936:406:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4521:248:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4538:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4549:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4531:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4531:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4531:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4572:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4583:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4568:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4568:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4588:2:10",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4561:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4561:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4561:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4611:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4622:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4607:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4607:18:10"
                      },
                      {
                        "hexValue": "506c61636520426964203a20546865207072696365206973206c657373207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4627:34:10",
                        "type": "",
                        "value": "Place Bid : The price is less th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4600:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4600:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4600:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4682:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4693:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4678:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4678:18:10"
                      },
                      {
                        "hexValue": "656e207468652070726576696f75732062696420616d6f756e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4698:28:10",
                        "type": "",
                        "value": "en the previous bid amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4671:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4671:56:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4671:56:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4736:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4748:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4759:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4744:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4744:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4736:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4498:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4512:4:10",
                "type": ""
              }
            ],
            "src": "4347:422:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4948:223:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4965:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4976:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4958:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4958:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4958:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4999:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5010:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4995:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4995:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5015:2:10",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4988:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4988:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4988:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5038:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5049:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5034:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5034:18:10"
                      },
                      {
                        "hexValue": "4372656174652041756374696f6e203a205a65726f2062617365207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5054:34:10",
                        "type": "",
                        "value": "Create Auction : Zero base price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5027:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5027:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5027:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5109:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5120:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5105:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5105:18:10"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5125:3:10",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5098:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5098:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5098:31:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5138:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5150:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5161:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5146:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5146:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5138:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4925:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4939:4:10",
                "type": ""
              }
            ],
            "src": "4774:397:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5350:225:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5367:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5378:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5360:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5360:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5360:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5401:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5412:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5397:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5397:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5417:2:10",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5390:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5390:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5390:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5440:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5451:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5436:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5436:18:10"
                      },
                      {
                        "hexValue": "4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5456:34:10",
                        "type": "",
                        "value": "Failed to create non-fungible to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5429:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5429:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5429:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5511:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5522:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5507:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5507:18:10"
                      },
                      {
                        "hexValue": "6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5527:5:10",
                        "type": "",
                        "value": "ken"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5500:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5500:33:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5500:33:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5542:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5554:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5565:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5550:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5550:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5542:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5327:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5341:4:10",
                "type": ""
              }
            ],
            "src": "5176:399:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5754:241:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5771:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5782:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5764:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5764:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5764:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5805:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5816:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5801:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5801:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5821:2:10",
                        "type": "",
                        "value": "51"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5794:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5794:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5794:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5844:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5855:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5840:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5840:18:10"
                      },
                      {
                        "hexValue": "506c616365204269643a20416d6f756e7420726563656976656420616e642070",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5860:34:10",
                        "type": "",
                        "value": "Place Bid: Amount received and p"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5833:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5833:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5833:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5915:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5926:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5911:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5911:18:10"
                      },
                      {
                        "hexValue": "726963652073686f756c642062652073616d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5931:21:10",
                        "type": "",
                        "value": "rice should be same"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5904:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5904:49:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5904:49:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5962:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5974:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5985:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5970:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5970:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5962:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5731:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5745:4:10",
                "type": ""
              }
            ],
            "src": "5580:415:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6174:240:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6191:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6202:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6184:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6184:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6184:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6225:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6236:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6221:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6221:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6241:2:10",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6214:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6214:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6214:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6264:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6275:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6260:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6260:18:10"
                      },
                      {
                        "hexValue": "536574746c652041756374696f6e203a205265737472696374656420746f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6280:34:10",
                        "type": "",
                        "value": "Settle Auction : Restricted to a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6253:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6253:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6253:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6335:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6346:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6331:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6331:18:10"
                      },
                      {
                        "hexValue": "756374696f6e6572206f722061646d696e21",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6351:20:10",
                        "type": "",
                        "value": "uctioner or admin!"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6324:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6324:48:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6324:48:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6381:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6393:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6404:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6389:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6389:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6381:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6151:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6165:4:10",
                "type": ""
              }
            ],
            "src": "6000:414:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6593:295:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6610:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6621:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6603:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6603:21:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6603:21:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6644:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6655:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6640:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6640:18:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6660:2:10",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6633:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6633:30:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6633:30:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6683:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6694:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6679:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6679:18:10"
                      },
                      {
                        "hexValue": "506c616365204269643a20416d6f756e742072656365697665642073686f756c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6699:34:10",
                        "type": "",
                        "value": "Place Bid: Amount received shoul"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6672:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6672:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6672:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6754:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6765:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6750:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6750:18:10"
                      },
                      {
                        "hexValue": "642062652067726174686572207468616e207468652063757272656e74206269",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6770:34:10",
                        "type": "",
                        "value": "d be grather than the current bi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6743:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6743:62:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6743:62:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6825:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6836:3:10",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6821:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6821:19:10"
                      },
                      {
                        "hexValue": "64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6842:3:10",
                        "type": "",
                        "value": "d"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6814:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6814:32:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6814:32:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6855:27:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6867:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6878:3:10",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6863:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6863:19:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6855:4:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fed217813f8367784041725ea239c97765a94d7e9ddf95a4b4fe8960ec941289__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6570:9:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6584:4:10",
                "type": ""
              }
            ],
            "src": "6419:469:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_int64(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, signextend(7, value))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_int64(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_int64(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_addresst_int64t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_int64(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_int64t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_int64(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_int64t_uint256t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_int64(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_int32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, signextend(3, value))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_int64__to_t_address_t_address_t_address_t_int64__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), signextend(7, value3))\n    }\n    function abi_encode_tuple_t_address_t_int64_t_uint256_t_address_t_address_t_uint256__to_t_address_t_int64_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), signextend(7, value1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Place Bid : Price Less Than the \")\n        mstore(add(headStart, 96), \"base price\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"Place Bid : The price is less th\")\n        mstore(add(headStart, 96), \"en the previous bid amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Create Auction : Zero base price\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Failed to create non-fungible to\")\n        mstore(add(headStart, 96), \"ken\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"Place Bid: Amount received and p\")\n        mstore(add(headStart, 96), \"rice should be same\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Settle Auction : Restricted to a\")\n        mstore(add(headStart, 96), \"uctioner or admin!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fed217813f8367784041725ea239c97765a94d7e9ddf95a4b4fe8960ec941289__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 65)\n        mstore(add(headStart, 64), \"Place Bid: Amount received shoul\")\n        mstore(add(headStart, 96), \"d be grather than the current bi\")\n        mstore(add(headStart, 128), \"d\")\n        tail := add(headStart, 160)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "208:2874:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "208:2874:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2719:361;;;;;;:::i;:::-;;:::i;:::-;;1368:846;;;;;;:::i;:::-;;:::i;751:375::-;;;;;;:::i;:::-;;:::i;480:83::-;;;;;;;;;;-1:-1:-1;480:83:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;480:83:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3659:15:10;;;3641:34;;3722:1;3711:21;;;;3706:2;3691:18;;3684:49;3749:18;;3742:34;;;;3812:15;;;3807:2;3792:18;;3785:43;3865:15;;;3859:3;3844:19;;3837:44;3912:3;3897:19;;3890:35;;;;3567:3;3552:19;480:83:0;;;;;;;;2218:498;;;;;;;;;;-1:-1:-1;2218:498:0;;;;;:::i;:::-;;:::i;567:21::-;;;;;;;;;;-1:-1:-1;567:21:0;;;;-1:-1:-1;;;;;567:21:0;;;;;;-1:-1:-1;;;;;2735:55:10;;;2717:74;;2705:2;2690:18;567:21:0;2672:125:10;2719:361:0;2866:16;2891:69;2922:5;2929:6;2937:8;2947:12;2891:30;:69::i;:::-;2865:95;-1:-1:-1;2763:2:3;2970:43:0;;2967:109;;3024:45;;-1:-1:-1;;;;;3024:45:0;;5378:2:10;3024:45:0;;;5360:21:10;5417:2;5397:18;;;5390:30;5456:34;5436:18;;;5429:62;5527:5;5507:18;;;5500:33;5550:19;;3024:45:0;;;;;;;;2967:109;2857:223;2719:361;;;;:::o;1368:846::-;-1:-1:-1;;;;;1534:21:0;;;1503:28;1534:21;;;;;;;;;;;:36;;;;;;;;;;;;;:48;;;;;;;;;1609:22;;;;1599:32;;;1591:87;;;;-1:-1:-1;;;;;1591:87:0;;4138:2:10;1591:87:0;;;4120:21:10;4177:2;4157:18;;;4150:30;4216:34;4196:18;;;4189:62;4287:12;4267:18;;;4260:40;4317:19;;1591:87:0;4110:232:10;1591:87:0;1701:12;:22;;;1692:6;:31;1684:102;;;;-1:-1:-1;;;;;1684:102:0;;4549:2:10;1684:102:0;;;4531:21:10;4588:2;4568:18;;;4561:30;4627:34;4607:18;;;4600:62;4698:28;4678:18;;;4671:56;4744:19;;1684:102:0;4521:248:10;1684:102:0;1813:6;1800:9;:19;1792:83;;;;-1:-1:-1;;;;;1792:83:0;;5782:2:10;1792:83:0;;;5764:21:10;5821:2;5801:18;;;5794:30;5860:34;5840:18;;;5833:62;5931:21;5911:18;;;5904:49;5970:19;;1792:83:0;5754:241:10;1792:83:0;1901:12;:22;;;1889:9;:34;1881:112;;;;-1:-1:-1;;;;;1881:112:0;;6621:2:10;1881:112:0;;;6603:21:10;6660:2;6640:18;;;6633:30;6699:34;6679:18;;;6672:62;6770:34;6750:18;;;6743:62;6842:3;6821:19;;;6814:32;6863:19;;1881:112:0;6593:295:10;1881:112:0;2003:26;;;;-1:-1:-1;;;;;2003:26:0;:40;1999:129;;2061:26;;;;2098:22;;;;2053:68;;-1:-1:-1;;;;;2061:26:0;;;;2053:68;;;;;2098:22;2061:26;2053:68;2061:26;2053:68;2098:22;2061:26;2053:68;;;;;;;;;;;;;;;;;;;;;1999:129;2133:22;;;:31;;;;-1:-1:-1;2170:26:0;;:39;;-1:-1:-1;;2170:39:0;2199:10;2170:39;;;-1:-1:-1;;1368:846:0:o;751:375::-;878:1;866:9;:13;858:59;;;;-1:-1:-1;;;;;858:59:0;;4976:2:10;858:59:0;;;4958:21:10;5015:2;4995:18;;;4988:30;5054:34;5034:18;;;5027:62;5125:3;5105:18;;;5098:31;5146:19;;858:59:0;4948:223:10;858:59:0;-1:-1:-1;;;;;955:19:0;;;924:28;955:19;;;;;;;;;;;:33;;;;;;;;;;;;;;;989:10;955:45;;;;;;;;1006:22;;;:35;;-1:-1:-1;;1006:35:0;;;;;;;1047:22;;;:34;;;1006:35;1087:22;:34;751:375::o;2218:498::-;-1:-1:-1;;;;;2360:20:0;;;2329:28;2360:20;;;;;;;;;;;:35;;;;;;;;;;;;;:47;;;;;;;;;;2422:26;;;;;2413:35;;-1:-1:-1;;2413:35:0;2422:26;;;2413:35;;;;;;-1:-1:-1;;;2476:22:0;2360:47;;2462:10;2476:22;;2462:36;2454:99;;;;-1:-1:-1;;;;;2454:99:0;;6202:2:10;2454:99:0;;;6184:21:10;6241:2;6221:18;;;6214:30;6280:34;6260:18;;;6253:62;6351:20;6331:18;;;6324:48;6389:19;;2454:99:0;6174:240:10;2454:99:0;2608:26;;;;2558:93;;2583:8;;2601:4;;-1:-1:-1;;;;;2608:26:0;2637:13;2558:24;:93::i;:::-;-1:-1:-1;;;;;;2664:20:0;;;:10;:20;;;;;;;;;;;:35;;;;;;;;;;;;;;;:47;;;;;;;;;;2657:54;;;;;;;;;;;;;;;;;-1:-1:-1;;2657:54:0;;;;;;;;;;;;;;;;;;;2218:498::o;22347:444:4:-;22573:116;;;-1:-1:-1;;;;;3108:15:10;;;22573:116:4;;;3090:34:10;3160:15;;;3140:18;;;3133:43;3212:15;;3192:18;;;3185:43;3275:1;3264:21;;;3244:18;;;;3237:49;;;;22573:116:4;;;;;;;;;;3001:19:10;;;;22573:116:4;;;;;;;;;22596:40;22573:116;;;22536:154;;-1:-1:-1;;;;;;300:5:4;;22536:154;;22573:116;22536:154;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22498:192;;;;22716:7;:67;;2616:2:3;22716:67:4;;;22737:6;22726:27;;;;;;;;;;;;:::i;:::-;22701:82;;;22347:444;-1:-1:-1;;;;;;;22347:444:4:o;14:196:10:-;82:20;;-1:-1:-1;;;;;131:54:10;;121:65;;111:2;;200:1;197;190:12;111:2;63:147;;;:::o;215:160::-;281:20;;341:1;330:20;;;320:31;;310:2;;365:1;362;355:12;380:405;464:6;472;480;488;541:3;529:9;520:7;516:23;512:33;509:2;;;558:1;555;548:12;509:2;581:29;600:9;581:29;:::i;:::-;571:39;;629:38;663:2;652:9;648:18;629:38;:::i;:::-;619:48;;686:38;720:2;709:9;705:18;686:38;:::i;:::-;676:48;;743:36;775:2;764:9;760:18;743:36;:::i;:::-;733:46;;499:286;;;;;;;:::o;790:330::-;865:6;873;881;934:2;922:9;913:7;909:23;905:32;902:2;;;950:1;947;940:12;902:2;973:29;992:9;973:29;:::i;:::-;963:39;;1021:36;1053:2;1042:9;1038:18;1021:36;:::i;:::-;1011:46;;1076:38;1110:2;1099:9;1095:18;1076:38;:::i;:::-;1066:48;;892:228;;;;;:::o;1125:324::-;1200:6;1208;1216;1269:2;1257:9;1248:7;1244:23;1240:32;1237:2;;;1285:1;1282;1275:12;1237:2;1308:29;1327:9;1308:29;:::i;:::-;1298:39;;1356:36;1388:2;1377:9;1373:18;1356:36;:::i;:::-;1346:46;;1439:2;1428:9;1424:18;1411:32;1401:42;;1227:222;;;;;:::o;1454:399::-;1538:6;1546;1554;1562;1615:3;1603:9;1594:7;1590:23;1586:33;1583:2;;;1632:1;1629;1622:12;1583:2;1655:29;1674:9;1655:29;:::i;:::-;1645:39;;1703:36;1735:2;1724:9;1720:18;1703:36;:::i;:::-;1693:46;;1786:2;1775:9;1771:18;1758:32;1748:42;;1809:38;1843:2;1832:9;1828:18;1809:38;:::i;1858:277::-;1926:6;1979:2;1967:9;1958:7;1954:23;1950:32;1947:2;;;1995:1;1992;1985:12;1947:2;2027:9;2021:16;2080:5;2077:1;2066:20;2059:5;2056:31;2046:2;;2101:1;2098;2091:12;2046:2;2124:5;1937:198;-1:-1:-1;;;1937:198:10:o;2140:426::-;2269:3;2307:6;2301:13;2332:1;2342:129;2356:6;2353:1;2350:13;2342:129;;;2454:4;2438:14;;;2434:25;;2428:32;2415:11;;;2408:53;2371:12;2342:129;;;2489:6;2486:1;2483:13;2480:2;;;2524:1;2515:6;2510:3;2506:16;2499:27;2480:2;-1:-1:-1;2544:16:10;;;;;2277:289;-1:-1:-1;;2277:289:10:o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.6.0 <0.9.0;\n \nimport './HederaResponseCodes.sol';\nimport './IHederaTokenService.sol';\nimport './HederaTokenService.sol';\nimport './ExpiryHelper.sol';\n \ncontract AuctionContract is ExpiryHelper{\n\n  /**\n   * @notice NFT metadata along with bid details\n  */\n  struct Auction {\n    address tokenId;\n    int64 serialNumber;\n    uint256 basePrice;\n    address auctioner;\n    address currentBidder;\n    uint256 bidAmount;\n  }  \n   mapping(address => mapping(int64 => mapping(address => Auction))) public mapAuction;\n  address public bidder;\n    /**\n   * @notice createAuction\n   * Function to start auction with first bid.\n   * Validate signatures, stores NFT data and add first bid as well\n   */\n \n   function createAuction(address tokenId, int64 serialNumber, uint256 basePrice) external payable {\n    \n    require(basePrice > 0, 'Create Auction : Zero base price.');\n\n    Auction storage NftOnAuction = mapAuction[tokenId][serialNumber][msg.sender];\n    NftOnAuction.auctioner = msg.sender;\n    NftOnAuction.bidAmount = basePrice;\n    NftOnAuction.basePrice = basePrice;\n  }\n\n    /**\n   * @notice placeBid\n   * Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token\n   * @param _tokenId NFT unique ID\n   * @param _price bid price\n   \n   * @param _auctioner Seller address\n   */\n  function placeBid(\n    address _tokenId,\n    int64 _serialNumber,\n    uint256 _price,\n    address _auctioner\n  ) public payable {\n\n    Auction storage NftOnAuction = mapAuction [_tokenId][_serialNumber][_auctioner];  \n\n    require(_price >= NftOnAuction.basePrice, 'Place Bid : Price Less Than the base price');\n    require(_price > NftOnAuction.bidAmount, 'Place Bid : The price is less then the previous bid amount');\n    require(msg.value == _price, 'Place Bid: Amount received and price should be same');\n    require(msg.value > NftOnAuction.bidAmount, 'Place Bid: Amount received should be grather than the current bid');\n    if (NftOnAuction.currentBidder != address(0)) {\n      payable(NftOnAuction.currentBidder).transfer(NftOnAuction.bidAmount);\n    }\n    NftOnAuction.bidAmount = _price;\n    NftOnAuction.currentBidder = msg.sender;\n  }\n\n  function settleAuction(\n    address _tokenId,\n    int64 _serialNumber,\n    address _auctioner\n  ) public {\n    Auction storage NftOnAuction = mapAuction[_tokenId][_serialNumber][_auctioner];\n    bidder = NftOnAuction.currentBidder;\n    require(msg.sender == NftOnAuction.auctioner, 'Settle Auction : Restricted to auctioner or admin!');\n   transferNonFungibleToken(_tokenId, address(this), NftOnAuction.currentBidder,  _serialNumber);\n    delete mapAuction[_tokenId][_serialNumber][_auctioner];\n  }\n  function transferNonFungibleToken(\n    address token,\n    address sender,\n    address receiver,\n    int64 serialNumber\n  ) public payable {\n \n    (int responseCode) = \n    HederaTokenService.transferNFT(token, sender, receiver, serialNumber);\n\n    if(responseCode != HederaResponseCodes.SUCCESS){\n        revert(\"Failed to create non-fungible token\");\n    }\n  }\n}",
  "sourcePath": "C:\\ACCUBITS\\PROJECT\\HEDERA_NFT\\contracts\\AuctionContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/AuctionContract.sol",
    "exportedSymbols": {
      "AuctionContract": [
        257
      ],
      "ExpiryHelper": [
        303
      ],
      "FeeHelper": [
        619
      ],
      "HederaResponseCodes": [
        1138
      ],
      "HederaTokenService": [
        2260
      ],
      "IHederaTokenService": [
        2967
      ],
      "KeyHelper": [
        3817
      ]
    },
    "id": 258,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:0"
      },
      {
        "absolutePath": "project:/contracts/HederaResponseCodes.sol",
        "file": "./HederaResponseCodes.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 1139,
        "src": "70:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IHederaTokenService.sol",
        "file": "./IHederaTokenService.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 2968,
        "src": "106:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/HederaTokenService.sol",
        "file": "./HederaTokenService.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 2261,
        "src": "142:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ExpiryHelper.sol",
        "file": "./ExpiryHelper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 304,
        "src": "177:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "ExpiryHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 303,
              "src": "236:12:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "236:12:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 257,
        "linearizedBaseContracts": [
          257,
          303,
          619,
          3817,
          2260,
          1138
        ],
        "name": "AuctionContract",
        "nameLocation": "217:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AuctionContract.Auction",
            "id": 20,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "342:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "334:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "334:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "serialNumber",
                "nameLocation": "361:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "355:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int64",
                  "typeString": "int64"
                },
                "typeName": {
                  "id": 10,
                  "name": "int64",
                  "nodeType": "ElementaryTypeName",
                  "src": "355:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "basePrice",
                "nameLocation": "387:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "379:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "auctioner",
                "nameLocation": "410:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "402:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "402:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "currentBidder",
                "nameLocation": "433:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "425:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 16,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "bidAmount",
                "nameLocation": "460:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "452:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Auction",
            "nameLocation": "320:7:0",
            "nodeType": "StructDefinition",
            "scope": 257,
            "src": "313:161:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b4d17850",
            "id": 29,
            "mutability": "mutable",
            "name": "mapAuction",
            "nameLocation": "553:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "480:83:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
              "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction)))"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "488:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "480:65:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction)))"
              },
              "valueType": {
                "id": 27,
                "keyType": {
                  "id": 22,
                  "name": "int64",
                  "nodeType": "ElementaryTypeName",
                  "src": "507:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  }
                },
                "nodeType": "Mapping",
                "src": "499:45:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                  "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction))"
                },
                "valueType": {
                  "id": 26,
                  "keyType": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "516:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                    "typeString": "mapping(address => struct AuctionContract.Auction)"
                  },
                  "valueType": {
                    "id": 25,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24,
                      "name": "Auction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20,
                      "src": "535:7:0"
                    },
                    "referencedDeclaration": 20,
                    "src": "535:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                      "typeString": "struct AuctionContract.Auction"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f496d882",
            "id": 31,
            "mutability": "mutable",
            "name": "bidder",
            "nameLocation": "582:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "567:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "567:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "847:279:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42,
                          "name": "basePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "866:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "878:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "866:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4372656174652041756374696f6e203a205a65726f20626173652070726963652e",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "881:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2",
                          "typeString": "literal_string \"Create Auction : Zero base price.\""
                        },
                        "value": "Create Auction : Zero base price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2",
                          "typeString": "literal_string \"Create Auction : Zero base price.\""
                        }
                      ],
                      "id": 41,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "858:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "858:59:0"
                },
                {
                  "assignments": [
                    50
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "940:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "924:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 49,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "924:7:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "924:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 51,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "955:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 53,
                        "indexExpression": {
                          "id": 52,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "966:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "955:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 55,
                      "indexExpression": {
                        "id": 54,
                        "name": "serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "975:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "955:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 58,
                    "indexExpression": {
                      "expression": {
                        "id": 56,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "989:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "989:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "955:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$20_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "924:76:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 60,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1006:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "auctioner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1006:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 63,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1031:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1031:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1006:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:35:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 67,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1047:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1047:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70,
                      "name": "basePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1072:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1047:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:34:0"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 73,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1087:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "basePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1087:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76,
                      "name": "basePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1112:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1087:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1087:34:0"
                }
              ]
            },
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "594:151:0",
              "text": " @notice createAuction\n Function to start auction with first bid.\n Validate signatures, stores NFT data and add first bid as well"
            },
            "functionSelector": "9a37e681",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAuction",
            "nameLocation": "760:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "782:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "774:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "serialNumber",
                  "nameLocation": "797:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "791:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "basePrice",
                  "nameLocation": "819:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "811:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "773:56:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:0:0"
            },
            "scope": 257,
            "src": "751:375:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1496:718:0",
              "statements": [
                {
                  "assignments": [
                    94
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "1519:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "1503:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 93,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 92,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "1503:7:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "1503:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 95,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1534:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 97,
                        "indexExpression": {
                          "id": 96,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "1546:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1534:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 99,
                      "indexExpression": {
                        "id": 98,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1556:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1534:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "id": 100,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1571:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1534:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$20_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 104,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1599:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 105,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1609:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "basePrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1609:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1599:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c61636520426964203a205072696365204c657373205468616e207468652062617365207072696365",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1633:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa",
                          "typeString": "literal_string \"Place Bid : Price Less Than the base price\""
                        },
                        "value": "Place Bid : Price Less Than the base price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa",
                          "typeString": "literal_string \"Place Bid : Price Less Than the base price\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1591:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 112,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1692:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 113,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1701:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bidAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "1701:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1692:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c61636520426964203a20546865207072696365206973206c657373207468656e207468652070726576696f75732062696420616d6f756e74",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1725:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212",
                          "typeString": "literal_string \"Place Bid : The price is less then the previous bid amount\""
                        },
                        "value": "Place Bid : The price is less then the previous bid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212",
                          "typeString": "literal_string \"Place Bid : The price is less then the previous bid amount\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1684:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1684:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:102:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1800:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1800:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 122,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1813:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1800:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c616365204269643a20416d6f756e7420726563656976656420616e642070726963652073686f756c642062652073616d65",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1821:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107",
                          "typeString": "literal_string \"Place Bid: Amount received and price should be same\""
                        },
                        "value": "Place Bid: Amount received and price should be same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107",
                          "typeString": "literal_string \"Place Bid: Amount received and price should be same\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1792:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 128,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1889:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1889:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 130,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bidAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "1901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1889:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c616365204269643a20416d6f756e742072656365697665642073686f756c642062652067726174686572207468616e207468652063757272656e7420626964",
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1925:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fed217813f8367784041725ea239c97765a94d7e9ddf95a4b4fe8960ec941289",
                          "typeString": "literal_string \"Place Bid: Amount received should be grather than the current bid\""
                        },
                        "value": "Place Bid: Amount received should be grather than the current bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fed217813f8367784041725ea239c97765a94d7e9ddf95a4b4fe8960ec941289",
                          "typeString": "literal_string \"Place Bid: Amount received should be grather than the current bid\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1881:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1881:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:112:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 136,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2003:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2003:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2041:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2033:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2033:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2033:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2003:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 154,
                  "nodeType": "IfStatement",
                  "src": "1999:129:0",
                  "trueBody": {
                    "id": 153,
                    "nodeType": "Block",
                    "src": "2045:83:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 149,
                                "name": "NftOnAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "2098:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                                  "typeString": "struct AuctionContract.Auction storage pointer"
                                }
                              },
                              "id": 150,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bidAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "2098:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 145,
                                    "name": "NftOnAuction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "2061:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                                      "typeString": "struct AuctionContract.Auction storage pointer"
                                    }
                                  },
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currentBidder",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17,
                                  "src": "2061:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2053:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 143,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2053:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2053:35:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2053:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2053:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "2053:68:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 155,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2133:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "2133:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 158,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "2158:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2133:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:31:0"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 161,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2170:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2170:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 164,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2199:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2199:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2170:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:39:0"
                }
              ]
            },
            "documentation": {
              "id": 81,
              "nodeType": "StructuredDocumentation",
              "src": "1132:233:0",
              "text": " @notice placeBid\n Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token\n @param _tokenId NFT unique ID\n @param _price bid price\n @param _auctioner Seller address"
            },
            "functionSelector": "6f3f44cf",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBid",
            "nameLocation": "1377:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1399:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1391:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "1419:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1413:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1446:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1438:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "1466:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1458:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1385:95:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1496:0:0"
            },
            "scope": 257,
            "src": "1368:846:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "2323:393:0",
              "statements": [
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "2345:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "2329:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 178,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "2329:7:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "2329:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 188,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 181,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "2360:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 183,
                        "indexExpression": {
                          "id": 182,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2371:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2360:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 185,
                      "indexExpression": {
                        "id": 184,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "2381:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2360:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 187,
                    "indexExpression": {
                      "id": 186,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "2396:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2360:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$20_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2329:78:0"
                },
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 189,
                      "name": "bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2413:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 190,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "2422:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2422:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2413:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2462:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2462:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 197,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "2476:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "auctioner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "2476:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2462:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536574746c652041756374696f6e203a205265737472696374656420746f2061756374696f6e6572206f722061646d696e21",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2500:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b",
                          "typeString": "literal_string \"Settle Auction : Restricted to auctioner or admin!\""
                        },
                        "value": "Settle Auction : Restricted to auctioner or admin!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b",
                          "typeString": "literal_string \"Settle Auction : Restricted to auctioner or admin!\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2454:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2454:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "2454:99:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 204,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2583:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2601:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AuctionContract_$257",
                              "typeString": "contract AuctionContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AuctionContract_$257",
                              "typeString": "contract AuctionContract"
                            }
                          ],
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2593:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2593:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2593:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 209,
                          "name": "NftOnAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2608:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                            "typeString": "struct AuctionContract.Auction storage pointer"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currentBidder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "2608:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 211,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "2637:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      ],
                      "id": 203,
                      "name": "transferNonFungibleToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "2558:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$__$",
                        "typeString": "function (address,address,address,int64)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:93:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "2558:93:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2657:54:0",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 214,
                            "name": "mapAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "2664:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                              "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                            }
                          },
                          "id": 216,
                          "indexExpression": {
                            "id": 215,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "2675:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2664:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                            "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                          }
                        },
                        "id": 218,
                        "indexExpression": {
                          "id": 217,
                          "name": "_serialNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "2685:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int64",
                            "typeString": "int64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2664:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                          "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "id": 219,
                        "name": "_auctioner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "2700:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2664:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$20_storage",
                        "typeString": "struct AuctionContract.Auction storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2657:54:0"
                }
              ]
            },
            "functionSelector": "cd02929f",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleAuction",
            "nameLocation": "2227:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2254:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2246:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "2274:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2268:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "2301:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2293:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2240:75:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:0:0"
            },
            "scope": 257,
            "src": "2218:498:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "2857:223:0",
              "statements": [
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "responseCode",
                      "nameLocation": "2870:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "2866:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 235,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "2866:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 239,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "2922:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 240,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2929:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 241,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2937:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 242,
                        "name": "serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2947:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      ],
                      "expression": {
                        "id": 237,
                        "name": "HederaTokenService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2260,
                        "src": "2891:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HederaTokenService_$2260_$",
                          "typeString": "type(contract HederaTokenService)"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2259,
                      "src": "2891:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int256_$",
                        "typeString": "function (address,address,address,int64) returns (int256)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2891:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2865:95:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 245,
                      "name": "responseCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "2970:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 246,
                        "name": "HederaResponseCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "2986:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$1138_$",
                          "typeString": "type(contract HederaResponseCodes)"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SUCCESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 690,
                      "src": "2986:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "2970:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 254,
                  "nodeType": "IfStatement",
                  "src": "2967:109:0",
                  "trueBody": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "3014:62:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f6b656e",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3031:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b",
                                "typeString": "literal_string \"Failed to create non-fungible token\""
                              },
                              "value": "Failed to create non-fungible token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b",
                                "typeString": "literal_string \"Failed to create non-fungible token\""
                              }
                            ],
                            "id": 249,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "3024:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3024:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "3024:45:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "651480b9",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferNonFungibleToken",
            "nameLocation": "2728:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2766:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2758:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2785:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2777:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2805:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2797:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "serialNumber",
                  "nameLocation": "2825:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2819:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2752:89:0"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2857:0:0"
            },
            "scope": 257,
            "src": "2719:361:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 258,
        "src": "208:2874:0",
        "usedErrors": []
      }
    ],
    "src": "36:3046:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/AuctionContract.sol",
    "exportedSymbols": {
      "AuctionContract": [
        257
      ],
      "ExpiryHelper": [
        303
      ],
      "FeeHelper": [
        619
      ],
      "HederaResponseCodes": [
        1138
      ],
      "HederaTokenService": [
        2260
      ],
      "IHederaTokenService": [
        2967
      ],
      "KeyHelper": [
        3817
      ]
    },
    "id": 258,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:0"
      },
      {
        "absolutePath": "project:/contracts/HederaResponseCodes.sol",
        "file": "./HederaResponseCodes.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 1139,
        "src": "70:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/IHederaTokenService.sol",
        "file": "./IHederaTokenService.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 2968,
        "src": "106:35:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/HederaTokenService.sol",
        "file": "./HederaTokenService.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 2261,
        "src": "142:34:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ExpiryHelper.sol",
        "file": "./ExpiryHelper.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 258,
        "sourceUnit": 304,
        "src": "177:28:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "ExpiryHelper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 303,
              "src": "236:12:0"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "236:12:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 257,
        "linearizedBaseContracts": [
          257,
          303,
          619,
          3817,
          2260,
          1138
        ],
        "name": "AuctionContract",
        "nameLocation": "217:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AuctionContract.Auction",
            "id": 20,
            "members": [
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "tokenId",
                "nameLocation": "342:7:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "334:15:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "334:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 11,
                "mutability": "mutable",
                "name": "serialNumber",
                "nameLocation": "361:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "355:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int64",
                  "typeString": "int64"
                },
                "typeName": {
                  "id": 10,
                  "name": "int64",
                  "nodeType": "ElementaryTypeName",
                  "src": "355:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 13,
                "mutability": "mutable",
                "name": "basePrice",
                "nameLocation": "387:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "379:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 12,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "379:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15,
                "mutability": "mutable",
                "name": "auctioner",
                "nameLocation": "410:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "402:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 14,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "402:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 17,
                "mutability": "mutable",
                "name": "currentBidder",
                "nameLocation": "433:13:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "425:21:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 16,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "425:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 19,
                "mutability": "mutable",
                "name": "bidAmount",
                "nameLocation": "460:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 20,
                "src": "452:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 18,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "452:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Auction",
            "nameLocation": "320:7:0",
            "nodeType": "StructDefinition",
            "scope": 257,
            "src": "313:161:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b4d17850",
            "id": 29,
            "mutability": "mutable",
            "name": "mapAuction",
            "nameLocation": "553:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "480:83:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
              "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction)))"
            },
            "typeName": {
              "id": 28,
              "keyType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "488:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "480:65:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction)))"
              },
              "valueType": {
                "id": 27,
                "keyType": {
                  "id": 22,
                  "name": "int64",
                  "nodeType": "ElementaryTypeName",
                  "src": "507:5:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  }
                },
                "nodeType": "Mapping",
                "src": "499:45:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                  "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction))"
                },
                "valueType": {
                  "id": 26,
                  "keyType": {
                    "id": 23,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "524:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "516:27:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                    "typeString": "mapping(address => struct AuctionContract.Auction)"
                  },
                  "valueType": {
                    "id": 25,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 24,
                      "name": "Auction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20,
                      "src": "535:7:0"
                    },
                    "referencedDeclaration": 20,
                    "src": "535:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                      "typeString": "struct AuctionContract.Auction"
                    }
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f496d882",
            "id": 31,
            "mutability": "mutable",
            "name": "bidder",
            "nameLocation": "582:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 257,
            "src": "567:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 30,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "567:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 79,
              "nodeType": "Block",
              "src": "847:279:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42,
                          "name": "basePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38,
                          "src": "866:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 43,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "878:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "866:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4372656174652041756374696f6e203a205a65726f20626173652070726963652e",
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "881:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2",
                          "typeString": "literal_string \"Create Auction : Zero base price.\""
                        },
                        "value": "Create Auction : Zero base price."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ab3bb47978bcc15f4a48bcbbbea935eeb3c8fcb6282ff25950523a8c23f6be2",
                          "typeString": "literal_string \"Create Auction : Zero base price.\""
                        }
                      ],
                      "id": 41,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "858:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "858:59:0"
                },
                {
                  "assignments": [
                    50
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "940:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "924:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 49,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 48,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "924:7:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "924:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 51,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "955:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 53,
                        "indexExpression": {
                          "id": 52,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "966:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "955:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 55,
                      "indexExpression": {
                        "id": 54,
                        "name": "serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "975:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "955:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 58,
                    "indexExpression": {
                      "expression": {
                        "id": 56,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "989:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 57,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "989:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "955:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$20_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "924:76:0"
                },
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 60,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1006:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "auctioner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15,
                      "src": "1006:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 63,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1031:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1031:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1006:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1006:35:0"
                },
                {
                  "expression": {
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 67,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1047:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "1047:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 70,
                      "name": "basePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1072:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1047:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "1047:34:0"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 73,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1087:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 75,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "basePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13,
                      "src": "1087:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 76,
                      "name": "basePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1112:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1087:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "1087:34:0"
                }
              ]
            },
            "documentation": {
              "id": 32,
              "nodeType": "StructuredDocumentation",
              "src": "594:151:0",
              "text": " @notice createAuction\n Function to start auction with first bid.\n Validate signatures, stores NFT data and add first bid as well"
            },
            "functionSelector": "9a37e681",
            "id": 80,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAuction",
            "nameLocation": "760:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "782:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "774:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "774:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "serialNumber",
                  "nameLocation": "797:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "791:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "basePrice",
                  "nameLocation": "819:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 80,
                  "src": "811:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "773:56:0"
            },
            "returnParameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "847:0:0"
            },
            "scope": 257,
            "src": "751:375:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 168,
              "nodeType": "Block",
              "src": "1496:718:0",
              "statements": [
                {
                  "assignments": [
                    94
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "1519:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 168,
                      "src": "1503:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 93,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 92,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "1503:7:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "1503:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 95,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "1534:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 97,
                        "indexExpression": {
                          "id": 96,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 83,
                          "src": "1546:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1534:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 99,
                      "indexExpression": {
                        "id": 98,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "1556:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1534:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 101,
                    "indexExpression": {
                      "id": 100,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 89,
                      "src": "1571:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1534:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$20_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1503:79:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 104,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1599:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 105,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1609:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "basePrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13,
                          "src": "1609:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1599:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c61636520426964203a205072696365204c657373205468616e207468652062617365207072696365",
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1633:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa",
                          "typeString": "literal_string \"Place Bid : Price Less Than the base price\""
                        },
                        "value": "Place Bid : Price Less Than the base price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2081014f66d837ba4531b7fed6a729986962ad793675aa299ce044f854b3b1fa",
                          "typeString": "literal_string \"Place Bid : Price Less Than the base price\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1591:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1591:87:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 112,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1692:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 113,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1701:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 114,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bidAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "1701:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1692:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c61636520426964203a20546865207072696365206973206c657373207468656e207468652070726576696f75732062696420616d6f756e74",
                        "id": 116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1725:60:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212",
                          "typeString": "literal_string \"Place Bid : The price is less then the previous bid amount\""
                        },
                        "value": "Place Bid : The price is less then the previous bid amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2370737d6582781f3fbf8f566eb786dbcd0aba5cc2c79687027b806b6869a212",
                          "typeString": "literal_string \"Place Bid : The price is less then the previous bid amount\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1684:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1684:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:102:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1800:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1800:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 122,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87,
                          "src": "1813:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1800:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c616365204269643a20416d6f756e7420726563656976656420616e642070726963652073686f756c642062652073616d65",
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1821:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107",
                          "typeString": "literal_string \"Place Bid: Amount received and price should be same\""
                        },
                        "value": "Place Bid: Amount received and price should be same"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8cedf8280b07b6913aa00aa37b5f063f3981fc95b2fa4c610151b9e4232c1107",
                          "typeString": "literal_string \"Place Bid: Amount received and price should be same\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1792:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1792:83:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "1792:83:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 128,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1889:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1889:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 130,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 94,
                            "src": "1901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 131,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "bidAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 19,
                          "src": "1901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1889:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506c616365204269643a20416d6f756e742072656365697665642073686f756c642062652067726174686572207468616e207468652063757272656e7420626964",
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1925:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fed217813f8367784041725ea239c97765a94d7e9ddf95a4b4fe8960ec941289",
                          "typeString": "literal_string \"Place Bid: Amount received should be grather than the current bid\""
                        },
                        "value": "Place Bid: Amount received should be grather than the current bid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fed217813f8367784041725ea239c97765a94d7e9ddf95a4b4fe8960ec941289",
                          "typeString": "literal_string \"Place Bid: Amount received should be grather than the current bid\""
                        }
                      ],
                      "id": 127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1881:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1881:112:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135,
                  "nodeType": "ExpressionStatement",
                  "src": "1881:112:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 136,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2003:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2003:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2041:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2033:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2033:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2033:10:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2003:40:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 154,
                  "nodeType": "IfStatement",
                  "src": "1999:129:0",
                  "trueBody": {
                    "id": 153,
                    "nodeType": "Block",
                    "src": "2045:83:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 149,
                                "name": "NftOnAuction",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 94,
                                "src": "2098:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                                  "typeString": "struct AuctionContract.Auction storage pointer"
                                }
                              },
                              "id": 150,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bidAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19,
                              "src": "2098:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 145,
                                    "name": "NftOnAuction",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 94,
                                    "src": "2061:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                                      "typeString": "struct AuctionContract.Auction storage pointer"
                                    }
                                  },
                                  "id": 146,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "currentBidder",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 17,
                                  "src": "2061:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 144,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2053:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 143,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2053:8:0",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2053:35:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "2053:44:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2053:68:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 152,
                        "nodeType": "ExpressionStatement",
                        "src": "2053:68:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 155,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2133:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 157,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "bidAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19,
                      "src": "2133:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 158,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 87,
                      "src": "2158:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2133:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:31:0"
                },
                {
                  "expression": {
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 161,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 94,
                        "src": "2170:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 163,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2170:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 164,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2199:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2199:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2170:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "2170:39:0"
                }
              ]
            },
            "documentation": {
              "id": 81,
              "nodeType": "StructuredDocumentation",
              "src": "1132:233:0",
              "text": " @notice placeBid\n Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token\n @param _tokenId NFT unique ID\n @param _price bid price\n @param _auctioner Seller address"
            },
            "functionSelector": "6f3f44cf",
            "id": 169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBid",
            "nameLocation": "1377:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1399:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1391:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "1419:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1413:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "1446:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1438:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "1466:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 169,
                  "src": "1458:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1385:95:0"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1496:0:0"
            },
            "scope": 257,
            "src": "1368:846:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 223,
              "nodeType": "Block",
              "src": "2323:393:0",
              "statements": [
                {
                  "assignments": [
                    180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 180,
                      "mutability": "mutable",
                      "name": "NftOnAuction",
                      "nameLocation": "2345:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 223,
                      "src": "2329:28:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                        "typeString": "struct AuctionContract.Auction"
                      },
                      "typeName": {
                        "id": 179,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 178,
                          "name": "Auction",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20,
                          "src": "2329:7:0"
                        },
                        "referencedDeclaration": 20,
                        "src": "2329:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 188,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 181,
                          "name": "mapAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "2360:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                            "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                          }
                        },
                        "id": 183,
                        "indexExpression": {
                          "id": 182,
                          "name": "_tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "2371:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2360:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                          "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                        }
                      },
                      "id": 185,
                      "indexExpression": {
                        "id": 184,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "2381:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2360:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                        "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                      }
                    },
                    "id": 187,
                    "indexExpression": {
                      "id": 186,
                      "name": "_auctioner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "2396:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2360:47:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Auction_$20_storage",
                      "typeString": "struct AuctionContract.Auction storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2329:78:0"
                },
                {
                  "expression": {
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 189,
                      "name": "bidder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "2413:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 190,
                        "name": "NftOnAuction",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "2422:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                          "typeString": "struct AuctionContract.Auction storage pointer"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "currentBidder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17,
                      "src": "2422:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2413:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 195,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2462:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2462:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 197,
                            "name": "NftOnAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 180,
                            "src": "2476:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                              "typeString": "struct AuctionContract.Auction storage pointer"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "auctioner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15,
                          "src": "2476:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2462:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "536574746c652041756374696f6e203a205265737472696374656420746f2061756374696f6e6572206f722061646d696e21",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2500:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b",
                          "typeString": "literal_string \"Settle Auction : Restricted to auctioner or admin!\""
                        },
                        "value": "Settle Auction : Restricted to auctioner or admin!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e16d1654358345908007e6a2b1102d6445353e08a737548c4715227cbcc5403b",
                          "typeString": "literal_string \"Settle Auction : Restricted to auctioner or admin!\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2454:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2454:99:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "2454:99:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 204,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2583:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2601:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AuctionContract_$257",
                              "typeString": "contract AuctionContract"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AuctionContract_$257",
                              "typeString": "contract AuctionContract"
                            }
                          ],
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2593:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2593:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2593:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 209,
                          "name": "NftOnAuction",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 180,
                          "src": "2608:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Auction_$20_storage_ptr",
                            "typeString": "struct AuctionContract.Auction storage pointer"
                          }
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "currentBidder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17,
                        "src": "2608:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 211,
                        "name": "_serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "2637:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      ],
                      "id": 203,
                      "name": "transferNonFungibleToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 256,
                      "src": "2558:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$__$",
                        "typeString": "function (address,address,address,int64)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:93:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "ExpressionStatement",
                  "src": "2558:93:0"
                },
                {
                  "expression": {
                    "id": 221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "2657:54:0",
                    "subExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 214,
                            "name": "mapAuction",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "2664:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$_$",
                              "typeString": "mapping(address => mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref)))"
                            }
                          },
                          "id": 216,
                          "indexExpression": {
                            "id": 215,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "2675:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2664:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_int64_$_t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$_$",
                            "typeString": "mapping(int64 => mapping(address => struct AuctionContract.Auction storage ref))"
                          }
                        },
                        "id": 218,
                        "indexExpression": {
                          "id": 217,
                          "name": "_serialNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "2685:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int64",
                            "typeString": "int64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2664:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Auction_$20_storage_$",
                          "typeString": "mapping(address => struct AuctionContract.Auction storage ref)"
                        }
                      },
                      "id": 220,
                      "indexExpression": {
                        "id": 219,
                        "name": "_auctioner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "2700:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2664:47:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Auction_$20_storage",
                        "typeString": "struct AuctionContract.Auction storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 222,
                  "nodeType": "ExpressionStatement",
                  "src": "2657:54:0"
                }
              ]
            },
            "functionSelector": "cd02929f",
            "id": 224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "settleAuction",
            "nameLocation": "2227:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2254:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2246:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2246:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_serialNumber",
                  "nameLocation": "2274:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2268:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2268:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_auctioner",
                  "nameLocation": "2301:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 224,
                  "src": "2293:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2293:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2240:75:0"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2323:0:0"
            },
            "scope": 257,
            "src": "2218:498:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 255,
              "nodeType": "Block",
              "src": "2857:223:0",
              "statements": [
                {
                  "assignments": [
                    236
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 236,
                      "mutability": "mutable",
                      "name": "responseCode",
                      "nameLocation": "2870:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 255,
                      "src": "2866:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 235,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "2866:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 244,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 239,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 226,
                        "src": "2922:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 240,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 228,
                        "src": "2929:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 241,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 230,
                        "src": "2937:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 242,
                        "name": "serialNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 232,
                        "src": "2947:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int64",
                          "typeString": "int64"
                        }
                      ],
                      "expression": {
                        "id": 237,
                        "name": "HederaTokenService",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2260,
                        "src": "2891:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HederaTokenService_$2260_$",
                          "typeString": "type(contract HederaTokenService)"
                        }
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2259,
                      "src": "2891:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_int64_$returns$_t_int256_$",
                        "typeString": "function (address,address,address,int64) returns (int256)"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2891:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2865:95:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 245,
                      "name": "responseCode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 236,
                      "src": "2970:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 246,
                        "name": "HederaResponseCodes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "2986:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_HederaResponseCodes_$1138_$",
                          "typeString": "type(contract HederaResponseCodes)"
                        }
                      },
                      "id": 247,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SUCCESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 690,
                      "src": "2986:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int32",
                        "typeString": "int32"
                      }
                    },
                    "src": "2970:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 254,
                  "nodeType": "IfStatement",
                  "src": "2967:109:0",
                  "trueBody": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "3014:62:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4661696c656420746f20637265617465206e6f6e2d66756e6769626c6520746f6b656e",
                              "id": 250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3031:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b",
                                "typeString": "literal_string \"Failed to create non-fungible token\""
                              },
                              "value": "Failed to create non-fungible token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_80132b915dd9af212a6b332f4007c35e3d95dadca6e11cbc4ce9a25704ca158b",
                                "typeString": "literal_string \"Failed to create non-fungible token\""
                              }
                            ],
                            "id": 249,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "3024:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3024:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 252,
                        "nodeType": "ExpressionStatement",
                        "src": "3024:45:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "651480b9",
            "id": 256,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferNonFungibleToken",
            "nameLocation": "2728:24:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 226,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2766:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2758:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 225,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2758:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 228,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2785:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2777:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 227,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 230,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "2805:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2797:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 229,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 232,
                  "mutability": "mutable",
                  "name": "serialNumber",
                  "nameLocation": "2825:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 256,
                  "src": "2819:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int64",
                    "typeString": "int64"
                  },
                  "typeName": {
                    "id": 231,
                    "name": "int64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int64",
                      "typeString": "int64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2752:89:0"
            },
            "returnParameters": {
              "id": 234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2857:0:0"
            },
            "scope": 257,
            "src": "2719:361:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 258,
        "src": "208:2874:0",
        "usedErrors": []
      }
    ],
    "src": "36:3046:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-11-16T05:20:51.764Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "placeBid(address,int64,uint256,address)": {
        "params": {
          "_auctioner": "Seller address",
          "_price": "bid price",
          "_tokenId": "NFT unique ID"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createAuction(address,int64,uint256)": {
        "notice": "createAuction Function to start auction with first bid. Validate signatures, stores NFT data and add first bid as well"
      },
      "placeBid(address,int64,uint256,address)": {
        "notice": "placeBid Function to place the bid on the nfts using native cryptocurrency and multiple erc20 token"
      }
    },
    "version": 1
  }
}